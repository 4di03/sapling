"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1144],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>s,MDXProvider:()=>u,mdx:()=>b,useMDXComponents:()=>d,withMDXComponents:()=>c});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r.apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),c=function(e){return function(n){var t=d(n.components);return o.createElement(e,r({},n,{components:t}))}},d=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=d(e.components);return o.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),c=d(t),u=a,f=c["".concat(i,".").concat(u)]||c[u]||p[u]||r;return t?o.createElement(f,l(l({ref:n},s),{},{components:t})):o.createElement(f,l({ref:n},s))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=f;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},920:(e,n,t)=>{t.d(n,{RJ:()=>s,Xj:()=>l,bv:()=>m,mY:()=>i,nk:()=>c});var o=t(67294),a=t(44996),r=t(50941);function i(e){let{name:n,linkText:t}=e;const r=function(e){switch(e){case"go":return"goto";case"isl":return"web"}return e}(n),i=null!=t?t:n;return o.createElement("a",{href:(0,a.default)("/docs/commands/"+r)},o.createElement("code",null,i))}function l(e){let{name:n}=e;return o.createElement(i,{name:n,linkText:"sl "+n})}function m(){return o.createElement("p",{style:{textAlign:"center"}},o.createElement("img",{src:(0,a.default)("/img/reviewstack-demo.gif"),width:800,align:"center"}))}function s(e){let{alt:n,light:t,dark:i}=e;return o.createElement(r.Z,{alt:n,sources:{light:(0,a.default)(t),dark:(0,a.default)(i)}})}function c(e){let{src:n}=e;return o.createElement("video",{controls:!0},o.createElement("source",{src:(0,a.default)(n)}))}},39134:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=t(83117),a=(t(67294),t(3905));t(920);const r={sidebar_position:50},i="Bookmarks",l={unversionedId:"overview/bookmarks",id:"overview/bookmarks",title:"Bookmarks",description:"Sapling has bookmarks instead of branches. Like a Git branch, a",source:"@site/docs/overview/bookmarks.md",sourceDirName:"overview",slug:"/overview/bookmarks",permalink:"/docs/overview/bookmarks",draft:!1,editUrl:"https://github.com/facebook/sapling/tree/main/website/docs/overview/bookmarks.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"Navigation",permalink:"/docs/overview/navigation"},next:{title:"Stacks of commits",permalink:"/docs/overview/stacks"}},m={},s=[{value:"Active bookmarks",id:"active-bookmarks",level:4},{value:"Differences from Git branches",id:"differences-from-git-branches",level:3}],c={toc:s};function d(e){let{components:n,...t}=e;return(0,a.mdx)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"bookmarks"},"Bookmarks"),(0,a.mdx)("p",null,"Sapling has bookmarks instead of branches. Like a Git branch, a\nbookmark is just a name that points to a particular commit and\ncan be used to refer to that commit during checkout, rebase, etc.\nSapling has two different types of bookmarks: local and remote."),(0,a.mdx)("p",null,"Sapling does not require local bookmarks for development. In\nfact, for day-to-day development, bookmarks are discouraged since\npeople find it easier not to use them."),(0,a.mdx)("p",null,"Local bookmarks:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Exist only on your local machine."),(0,a.mdx)("li",{parentName:"ul"},"Can be seen and modified only by you, using the ",(0,a.mdx)("inlineCode",{parentName:"li"},"sl bookmark")," command."),(0,a.mdx)("li",{parentName:"ul"},"Are completely optional, and generally unnecessary for normal workflows."),(0,a.mdx)("li",{parentName:"ul"},"Can be active or inactive (see below). Active means they move when you commit.")),(0,a.mdx)("p",null,"Remote bookmarks:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Are local copies of the server\u2019s bookmarks."),(0,a.mdx)("li",{parentName:"ul"},"Appear prefixed with ",(0,a.mdx)("inlineCode",{parentName:"li"},"remote/")," (example: ",(0,a.mdx)("inlineCode",{parentName:"li"},"remote/main"),")"),(0,a.mdx)("li",{parentName:"ul"},"Cannot be modified locally by you.  They can only be updated by ",(0,a.mdx)("inlineCode",{parentName:"li"},"sl pull")," or moved by ",(0,a.mdx)("inlineCode",{parentName:"li"},"sl push"),".")),(0,a.mdx)("p",null,"All of your local bookmarks and your most important remote\nbookmarks are shown in ",(0,a.mdx)("inlineCode",{parentName:"p"},"smartlog")," output. In this example,\n",(0,a.mdx)("inlineCode",{parentName:"p"},"remote/main")," is a remote bookmark and ",(0,a.mdx)("inlineCode",{parentName:"p"},"my_feature")," is created as\na local bookmark."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-sl-shell-example"},"$ sl\no  b84224608  13 minutes ago  remote/main\n\u2577\n\u2577 @  15de72785  35 seconds ago  mary\n\u256d\u2500\u256f  Implement glorious features\n\u2502\no  a555d064c  Wednesday at 09:06\n\u2502\n~\n\n$ sl bookmark my_feature\n\n$ sl\no  b84224608  13 minutes ago  remote/main\n\u2577\n\u2577 @  15de72785  35 seconds ago  mary  my_feature*\n\u256d\u2500\u256f  Implement glorious features\n\u2502\no  a555d064c  Wednesday at 09:06\n\u2502\n~\n")),(0,a.mdx)("h4",{id:"active-bookmarks"},"Active bookmarks"),(0,a.mdx)("p",null,"The asterisk (",(0,a.mdx)("inlineCode",{parentName:"p"},"*"),") on the ",(0,a.mdx)("inlineCode",{parentName:"p"},"my_feature")," bookmark indicates the\nbookmark is active. If you make a commit, the active bookmark\nwill move forward to point at the new commit. If ",(0,a.mdx)("inlineCode",{parentName:"p"},"my_feature")," was\nnot active, making a new commit would not change ",(0,a.mdx)("inlineCode",{parentName:"p"},"my_feature"),",\nwhich would remain pointing at ",(0,a.mdx)("inlineCode",{parentName:"p"},"15de72785"),"."),(0,a.mdx)("p",null,"A bookmark is made active when it is first created or when it is\nexplicitly checked out with ",(0,a.mdx)("inlineCode",{parentName:"p"},"sl goto my_feature"),". It is made\ninactive when you explicitly go to another commit, like with ",(0,a.mdx)("inlineCode",{parentName:"p"},"sl\ngoto OTHER_COMMIT"),"."),(0,a.mdx)("h3",{id:"differences-from-git-branches"},"Differences from Git branches"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},'In Git you must always be working on a local branch, otherwise\nyou end up in the confusing "detached head" state and any\ncommits you make may be hard to find later or may be garbage\ncollected. In Sapling, you do not need a bookmark when creating\na new commit, and commits are visible in ',(0,a.mdx)("inlineCode",{parentName:"li"},"smartlog")," regardless\nof whether they have a bookmark or not."),(0,a.mdx)("li",{parentName:"ul"},"In Git, deleting a branch makes it difficult to find the\ncommits that were on that branch. In Sapling, deleting a local\nbookmark doesn\u2019t hide commits, and bookmarks are safe and\neasy to add and delete."),(0,a.mdx)("li",{parentName:"ul"},"In Git, rebasing or amending a branch will only affect that\nbranch. If multiple branches were pointing at the same\ncommit, the other branches will be left behind, still\npointing at the old commit. In Sapling, when you rebase or\namend, every bookmark on a commit will be moved to the new\nversion of the commit.")))}d.isMDXComponent=!0}}]);