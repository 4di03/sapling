"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2291],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>o,MDXProvider:()=>u,mdx:()=>N,useMDXComponents:()=>s,withMDXComponents:()=>p});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(){return l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},l.apply(this,arguments)}function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),p=function(e){return function(n){var t=s(n.components);return a.createElement(e,l({},n,{components:t}))}},s=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},x=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=s(t),u=r,x=p["".concat(m,".").concat(u)]||p[u]||c[u]||l;return t?a.createElement(x,d(d({ref:n},o),{},{components:t})):a.createElement(x,d({ref:n},o))}));function N(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,m=new Array(l);m[0]=x;var d={};for(var i in n)hasOwnProperty.call(n,i)&&(d[i]=n[i]);d.originalType=e,d.mdxType="string"==typeof e?e:r,m[1]=d;for(var o=2;o<l;o++)m[o]=t[o];return a.createElement.apply(null,m)}return a.createElement.apply(null,t)}x.displayName="MDXCreateElement"},52226:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>m,default:()=>s,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var a=t(83117),r=(t(67294),t(3905));const l={sidebar_position:30},m=void 0,d={unversionedId:"commands/rebase",id:"commands/rebase",title:"rebase",description:"rebase",source:"@site/docs/commands/rebase.md",sourceDirName:"commands",slug:"/commands/rebase",permalink:"/docs/commands/rebase",draft:!1,editUrl:"https://github.com/facebook/sapling/tree/main/website/docs/commands/rebase.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"push",permalink:"/docs/commands/push"},next:{title:"redo",permalink:"/docs/commands/redo"}},i={},o=[{value:"rebase",id:"rebase",level:2},{value:"arguments",id:"arguments",level:2}],p={toc:o};function s(e){let{components:n,...t}=e;return(0,r.mdx)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h2",{id:"rebase"},"rebase"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"move commits from one location to another")),(0,r.mdx)("p",null,"Move commits from one part of the commit graph to another. This\nbehavior is achieved by creating a copy of the commit at the\ndestination and hiding the original commit."),(0,r.mdx)("p",null,"Use ",(0,r.mdx)("inlineCode",{parentName:"p"},"-k/--keep")," to skip the hiding and keep the original commits visible."),(0,r.mdx)("p",null,"If the commits being rebased have bookmarks, rebase moves the bookmarks\nonto the new versions of the commits. Bookmarks are moved even if ",(0,r.mdx)("inlineCode",{parentName:"p"},"--keep"),"\nis specified."),(0,r.mdx)("p",null,"Public commits cannot be rebased unless you use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"--keep")," option\nto copy them."),(0,r.mdx)("p",null,"Use the following options to select the commits you want to rebase:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},(0,r.mdx)("inlineCode",{parentName:"p"},"-r/--rev")," to explicitly select commits")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},(0,r.mdx)("inlineCode",{parentName:"p"},"-s/--source")," to select a root commit and include all of its   descendants")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},(0,r.mdx)("inlineCode",{parentName:"p"},"-b/--base")," to select a commit and its ancestors and descendants"))),(0,r.mdx)("p",null,"If no option is specified to select commits, ",(0,r.mdx)("inlineCode",{parentName:"p"},"-b .")," is used by default."),(0,r.mdx)("p",null,"If ",(0,r.mdx)("inlineCode",{parentName:"p"},"--source")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"--rev")," is used, special names ",(0,r.mdx)("inlineCode",{parentName:"p"},"SRC")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"ALLSRC"),"\ncan be used in ",(0,r.mdx)("inlineCode",{parentName:"p"},"--dest"),". Destination would be calculated per source\nrevision with ",(0,r.mdx)("inlineCode",{parentName:"p"},"SRC")," substituted by that single source revision and\n",(0,r.mdx)("inlineCode",{parentName:"p"},"ALLSRC")," substituted by all source revisions."),(0,r.mdx)("p",null,"If multiple ",(0,r.mdx)("inlineCode",{parentName:"p"},"--rev"),"s are specified, they can be paired with multiple\n",(0,r.mdx)("inlineCode",{parentName:"p"},"--dest"),"s. For example:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"rebase -r A+B -d X -r C::E -d Y\n")),(0,r.mdx)("p",null,"will rebase ",(0,r.mdx)("inlineCode",{parentName:"p"},"A+B")," to ",(0,r.mdx)("inlineCode",{parentName:"p"},"X"),", and rebase ",(0,r.mdx)("inlineCode",{parentName:"p"},"C::E")," to ",(0,r.mdx)("inlineCode",{parentName:"p"},"Y"),"."),(0,r.mdx)("p",null,"If commits that you are rebasing consist entirely of changes that are\nalready present in the destination, those commits are not moved (in\nother words, they are rebased out)."),(0,r.mdx)("p",null,"Sometimes conflicts can occur when you rebase. When this happens, by\ndefault, Sapling launches an editor for every conflict. Conflict markers\nare inserted into affected files, like:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"<<<<\ndest\n====\nsource\n>>>>\n")),(0,r.mdx)("p",null,"To fix the conflicts, for each file, remove the markers and replace the\nwhole block of code with the correctly merged code."),(0,r.mdx)("p",null,"If you close the editor without resolving the conflict, the rebase is\ninterrupted and you are returned to the command line. At this point, you\ncan resolve conflicts in manual resolution mode. See ",(0,r.mdx)("inlineCode",{parentName:"p"},"sl help resolve")," for\ndetails."),(0,r.mdx)("p",null,"After manually resolving conflicts, resume the rebase with\n",(0,r.mdx)("inlineCode",{parentName:"p"},"sl rebase --continue"),". If you are not able to successfully\nresolve all conflicts, run ",(0,r.mdx)("inlineCode",{parentName:"p"},"sl rebase --abort")," to abort the\nrebase."),(0,r.mdx)("p",null,"Alternatively, you can use a custom merge tool to automate conflict\nresolution. To specify a custom merge tool, use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"--tool")," flag. See\n",(0,r.mdx)("inlineCode",{parentName:"p"},"sl help merge-tools")," for a list of available tools and for information\nabout configuring the default merge behavior."),(0,r.mdx)("p",null,"Examples:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Move a single commit to master:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sl rebase -r 5f493448 -d master\n")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Move a commit and all its descendants to another part of the commit graph:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sl rebase --source c0c3 --dest 4cf9\n")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Rebase everything on a local branch marked by a bookmark to master:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sl rebase --base myfeature --dest master\n")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Rebase orphaned commits onto the latest version of their parents:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sl rebase --restack\n")),(0,r.mdx)("p",null,"Configuration Options:"),(0,r.mdx)("p",null,"By default, rebase will close the transaction after each commit. For\nperformance purposes, you can configure rebase to use a single transaction\nacross the entire rebase. WARNING: This setting introduces a significant\nrisk of losing the work you've done in a rebase if the rebase aborts\nunexpectedly:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"[rebase]\nsingletransaction = True\n")),(0,r.mdx)("p",null,"By default, rebase writes to the working copy, but you can configure it\nto run in-memory for for better performance, and to allow it to run if the\ncurrent checkout is dirty:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"[rebase]\nexperimental.inmemory = True\n")),(0,r.mdx)("p",null,"It will also print a configurable warning:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"[rebase]\nexperimental.inmemorywarning = Using experimental in-memory rebase\n")),(0,r.mdx)("p",null,"Returns 0 on success (also when nothing to rebase), 1 if there are\nunresolved conflicts."),(0,r.mdx)("h2",{id:"arguments"},"arguments"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,r.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,r.mdx)("th",{parentName:"tr",align:null},"default"),(0,r.mdx)("th",{parentName:"tr",align:null},"description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-s")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--source")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"rebase the specified commit and descendants")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-b")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--base")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"rebase everything from branching point of specified commit")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-r")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--rev")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"rebase these revisions")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-d")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--dest")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"rebase onto the specified revision")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--collapse")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"collapse the rebased commits")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-m")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--message")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"use text as collapse commit message")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-e")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--edit")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"invoke editor on commit messages")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-l")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--logfile")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"read collapse commit message from file")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-k")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--keep")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"keep original commits")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-t")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--tool")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"specify merge tool")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-c")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--continue")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"continue an interrupted rebase")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-a")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--abort")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"abort an interrupted rebase")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--restack")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"rebase all changesets in the current stack onto the latest version of their respective parents")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-i")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--interactive")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"interactive rebase")))))}s.isMDXComponent=!0}}]);