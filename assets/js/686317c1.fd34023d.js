"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["8157"],{11344:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,contentTitle:()=>l,default:()=>a,assets:()=>c,toc:()=>o,frontMatter:()=>t});var i=JSON.parse('{"id":"commands/log","title":"log","description":"log","source":"@site/docs/commands/log.md","sourceDirName":"commands","slug":"/commands/log","permalink":"/docs/commands/log","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/log.md","tags":[],"version":"current","sidebarPosition":24,"frontMatter":{"sidebar_position":24},"sidebar":"tutorialSidebar","previous":{"title":"journal","permalink":"/docs/commands/journal"},"next":{"title":"metaedit","permalink":"/docs/commands/metaedit"}}'),d=s("85893"),r=s("50065");let t={sidebar_position:24},l=void 0,c={},o=[{value:"log",id:"log",level:2},{value:"arguments",id:"arguments",level:2}];function h(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"log",children:"log"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"show commit history"})}),"\n",(0,d.jsx)(n.p,{children:"Print the revision history of the specified files or the entire\nproject."}),"\n",(0,d.jsxs)(n.p,{children:["If no revision range is specified, the default is the current commit\nand all of its ancestors (",(0,d.jsx)(n.code,{children:"::."}),")."]}),"\n",(0,d.jsxs)(n.p,{children:["File history is shown without following the rename or copy\nhistory of files. To follow file history across renames and\ncopies, use the ",(0,d.jsx)(n.code,{children:"-f/-- follow"})," option. If the ",(0,d.jsx)(n.code,{children:"--follow"}),"\noption is used without a filename, only the ancestors or\ndescendants of the starting revision are shown."]}),"\n",(0,d.jsxs)(n.p,{children:["By default, ",(0,d.jsx)(n.code,{children:"sl log"})," prints the commit's hash, non-trivial\nparents, user, date, time, and the single-line summary. When the\n",(0,d.jsx)(n.code,{children:"-v/--verbose"})," option is used, the list of changed files and\nfull commit message are shown."]}),"\n",(0,d.jsxs)(n.p,{children:["With the ",(0,d.jsx)(n.code,{children:"--graph"})," option, revisions are shown as an ASCII art\ngraph with the most recent commit at the top. The graph nodes\nare depicted as follows: ",(0,d.jsx)(n.strong,{children:"o"})," is a commit, ",(0,d.jsx)(n.strong,{children:"@"})," is a working\ndirectory parent, ",(0,d.jsx)(n.strong,{children:"x"})," is obsolete, and ",(0,d.jsx)(n.strong,{children:"+"})," represents a fork\nwhere the commit from the lines below is a parent of the ",(0,d.jsx)(n.strong,{children:"o"}),"\nmerge on the same line. Paths in the graph are represented with\n",(0,d.jsx)(n.strong,{children:"|"}),", ",(0,d.jsx)(n.strong,{children:"/"})," and so forth. ",(0,d.jsx)(n.strong,{children:":"})," in place of a ",(0,d.jsx)(n.strong,{children:"|"})," indicates\none or more revisions in a path are omitted."]}),"\n",(0,d.jsxs)(n.p,{children:["Use the ",(0,d.jsx)(n.code,{children:"-L/--line-range FILE,M:N"})," option to follow the\nhistory of lines from ",(0,d.jsx)(n.strong,{children:"M"})," to ",(0,d.jsx)(n.strong,{children:"N"})," in FILE. With the ",(0,d.jsx)(n.code,{children:"-p/-- patch"})," option, only diff hunks affecting specified line range\nwill be shown. The ",(0,d.jsx)(n.code,{children:"-L"})," option can be specified multiple\ntimes and requires the ",(0,d.jsx)(n.code,{children:"--follow"})," option. Currently, the line\nrange option is not compatible with ",(0,d.jsx)(n.code,{children:"--graph"})," and is an\nexperimental feature."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"sl log --patch"})," may generate unexpected diff output for merge\ncommits, as it will only compare the merge commit against\nits first parent. Also, only files different from BOTH parents\nwill appear in the ",(0,d.jsx)(n.strong,{children:"files:"})," section."]}),"\n",(0,d.jsxs)(n.p,{children:["For performance reasons, ",(0,d.jsx)(n.code,{children:"sl log FILE"})," may omit duplicate changes\nmade on branches and will not show removals or mode changes. To\nsee all such changes, use the ",(0,d.jsx)(n.code,{children:"--removed"})," switch."]}),"\n",(0,d.jsxs)(n.p,{children:["The history resulting from ",(0,d.jsx)(n.code,{children:"-L/--line-range"})," options depends on\ndiff options: for instance, if white-spaces are ignored,\nrespective changes with only white-spaces in specified line range\nwill not be listed."]}),"\n",(0,d.jsx)(n.p,{children:"Some examples:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"commits with full descriptions and file lists:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl log -v\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"commits ancestral to the working directory:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl log -f\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"last 10 commits on the current branch:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl log -l 10 -b .\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"commits showing all modifications of a file, including removals:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl log --removed file.c\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"all commits that touch a directory, with diffs, excluding merges:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl log -Mp lib/\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"all revision numbers that match a keyword:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'sl log -k bug --template "{rev}\\n"\n'})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"the full hash identifier of the working directory parent:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'sl log -r . --template "{node}\\n"\n'})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"list available log templates:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl log -T list\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"check if a given commit is included in a bookmarked release:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'sl log -r "a21ccf and ancestor(release_1.9)"\n'})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"find all commits by some user in a date range:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'sl log -k alice -d "may 2008 to jul 2008"\n'})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"commits touching lines 13 to 23 for file.c:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl log -L file.c,13:23\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"commits touching lines 13 to 23 for file.c and lines 2 to 6 of  main.c with patch:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl log -L file.c,13:23 -L main.c,2:6 -p\n"})}),"\n",(0,d.jsxs)(n.p,{children:["See ",(0,d.jsx)(n.code,{children:"sl help dates"})," for a list of formats valid for ",(0,d.jsx)(n.code,{children:"-d/--date"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:["See ",(0,d.jsx)(n.code,{children:"sl help revisions"})," for more about specifying and ordering\nrevisions."]}),"\n",(0,d.jsxs)(n.p,{children:["See ",(0,d.jsx)(n.code,{children:"sl help templates"})," for more about pre-packaged styles and\nspecifying custom templates. The default template used by the log\ncommand can be customized via the ",(0,d.jsx)(n.code,{children:"ui.logtemplate"})," configuration\nsetting."]}),"\n",(0,d.jsx)(n.p,{children:"Returns 0 on success."}),"\n",(0,d.jsx)(n.h2,{id:"arguments",children:"arguments"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"shortname"}),(0,d.jsx)(n.th,{children:"fullname"}),(0,d.jsx)(n.th,{children:"default"}),(0,d.jsx)(n.th,{children:"description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-f"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--follow"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"follow changeset history, or file history across copies and renames"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-d"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--date"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"show revisions matching date spec"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-C"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--copies"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"show copied files"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-k"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--keyword"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"do case-insensitive search for a given text"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-r"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--rev"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"show the specified revision or revset"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--removed"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"include revisions where files were removed"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-u"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--user"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"revisions committed by user"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-P"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--prune"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"do not display revision or any of its ancestors"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-p"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--patch"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"show patch"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-g"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--git"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"use git extended diff format"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-l"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--limit"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"limit number of changes displayed"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-M"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--no-merges"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"do not show merges"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--stat"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"output diffstat-style summary of changes"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-G"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--graph"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"show the revision DAG"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-T"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--template"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"display with template"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-I"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--include"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"include files matching the given patterns"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-X"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--exclude"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"exclude files matching the given patterns"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--all"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"shows all changesets in the repo"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--sparse"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"limit to changesets affecting the sparse checkout"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--remote"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"show remote names even if hidden"})]})]})]})]})}function a(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},50065:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return t}});var i=s(67294);let d={},r=i.createContext(d);function t(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);