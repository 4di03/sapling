"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7596],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>s,MDXProvider:()=>h,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>d});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},i.apply(this,arguments)}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){return function(t){var n=c(t.components);return o.createElement(e,i({},t,{components:n}))}},c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},h=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),h=a,u=d["".concat(r,".").concat(h)]||d[h]||p[h]||i;return n?o.createElement(u,m(m({ref:t},s),{},{components:n})):o.createElement(u,m({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=u;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m.mdxType="string"==typeof e?e:a,r[1]=m;for(var s=2;s<i;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},920:(e,t,n)=>{n.d(t,{RJ:()=>s,Xj:()=>m,bv:()=>l,mY:()=>r,nk:()=>d});var o=n(67294),a=n(44996),i=n(50941);function r(e){let{name:t,linkText:n}=e;const i=function(e){switch(e){case"go":return"goto";case"isl":return"web"}return e}(t),r=null!=n?n:t;return o.createElement("a",{href:(0,a.default)("/docs/commands/"+i)},o.createElement("code",null,r))}function m(e){let{name:t}=e;return o.createElement(r,{name:t,linkText:"sl "+t})}function l(){return o.createElement("p",{style:{textAlign:"center"}},o.createElement("img",{src:(0,a.default)("/img/reviewstack-demo.gif"),width:800,align:"center"}))}function s(e){let{alt:t,light:n,dark:r}=e;return o.createElement(i.Z,{alt:t,sources:{light:(0,a.default)(n),dark:(0,a.default)(r)}})}function d(e){let{src:t}=e;return o.createElement("video",{controls:!0},o.createElement("source",{src:(0,a.default)(t)}))}},55368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>m,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=n(83117),a=(n(67294),n(3905)),i=n(920);const r={sidebar_position:10},m="Interactive Smartlog (ISL)",l={unversionedId:"addons/isl",id:"addons/isl",title:"Interactive Smartlog (ISL)",description:"Interactive Smartlog (ISL) is a web-based, graphical interface for working with your Sapling smartlog. It is available as part of Sapling Web, which you can launch from the command line as follows:",source:"@site/docs/addons/isl.md",sourceDirName:"addons",slug:"/addons/isl",permalink:"/docs/addons/isl",draft:!1,editUrl:"https://github.com/facebook/sapling/tree/main/website/docs/addons/isl.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Add-ons",permalink:"/docs/category/add-ons"},next:{title:"VS Code extension",permalink:"/docs/addons/vscode"}},s={},d=[{value:"What can you do with ISL?",id:"what-can-you-do-with-isl",level:2},{value:"Working with commits and stacks",id:"working-with-commits-and-stacks",level:3},{value:"Running commands",id:"running-commands",level:3},{value:"Making commits and amending",id:"making-commits-and-amending",level:3},{value:"Interacting with code review",id:"interacting-with-code-review",level:3},{value:"Resolving merge conflicts",id:"resolving-merge-conflicts",level:3},{value:"Comparing changes",id:"comparing-changes",level:3},{value:"Speeding up change detection with Watchman",id:"speeding-up-change-detection-with-watchman",level:2},{value:"Connecting to ISL running on another machine",id:"connecting-to-isl-running-on-another-machine",level:2},{value:"Host with available ports",id:"host-with-available-ports",level:3},{value:"Host with no available ports",id:"host-with-no-available-ports",level:3}],c={toc:d};function h(e){let{components:t,...n}=e;return(0,a.mdx)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"interactive-smartlog-isl"},"Interactive Smartlog (ISL)"),(0,a.mdx)("p",null,"Interactive Smartlog (ISL) is a web-based, graphical interface for working with your Sapling smartlog. It is available as part of Sapling Web, which you can launch from the command line as follows:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"sl web\n")),(0,a.mdx)("p",null,"By default, this will start the Sapling Web server and open the UI in a local browser."),(0,a.mdx)("p",null,"See the docs for the ",(0,a.mdx)(i.Xj,{name:"web",mdxType:"SLCommand"})," command for the full set of options."),(0,a.mdx)(i.RJ,{alt:"ISL Overview",light:"/img/isl/isl_overview_light.png",dark:"/img/isl/isl_overview_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("h2",{id:"what-can-you-do-with-isl"},"What can you do with ISL?"),(0,a.mdx)("p",null,"As the name suggests, Interactive Smartlog is an ",(0,a.mdx)("em",{parentName:"p"},"interactive")," form of the ",(0,a.mdx)("em",{parentName:"p"},"smartlog")," command.\nISL shows you a tree of your commits, with each commit including information about Pull Requests, bookmarks, and more.\nRather than typing commit hashes, you can directly click on commits to interact with them.\nFor example, rebasing a commit is as simple as dragging and dropping."),(0,a.mdx)("p",null,"While ISL doesn't provide every single feature of the Sapling CLI, it is designed to\nsimplify everyday workflows and provide an extremely clear picture of your local changes,\nwhich is often all that's needed."),(0,a.mdx)("h3",{id:"working-with-commits-and-stacks"},"Working with commits and stacks"),(0,a.mdx)("p",null,"The main commit tree in ISL has an indicator that says ",(0,a.mdx)("strong",{parentName:"p"},"You are here"),", showing\nwhich commit you are currently on.\nYou can go to different commits by hovering on them and clicking ",(0,a.mdx)("inlineCode",{parentName:"p"},"Goto")," to run ",(0,a.mdx)(i.mY,{name:"goto",linkText:"sl goto",mdxType:"Command"}),"."),(0,a.mdx)(i.RJ,{alt:"Go to commits",light:"/img/isl/goto_light.png",dark:"/img/isl/goto_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("p",null,"As you create new commits, they will be created on top of each other, forming ",(0,a.mdx)("em",{parentName:"p"},"stacks"),".\nThis is similar to branches in Git.\nA commit can also have more than one commit stacked on top of it."),(0,a.mdx)("p",null,"You can drag and drop commits to rebase them. This is the easiest way to re-arrange commits and manipulate stacks."),(0,a.mdx)(i.nk,{src:"/img/isl/drag_and_drop_rebase_light.mov",mdxType:"Video"}),(0,a.mdx)("p",null,"Note that drag-and-drop rebasing is not allowed while you have uncommitted changes, since it's harder to deal with merge conflicts.\nCommit any uncommitted changes first to work around this."),(0,a.mdx)("p",null,"Drag-and-drop performs a ",(0,a.mdx)(i.mY,{name:"rebase",linkText:"sl rebase",mdxType:"Command"}),", including all commits stacked on top of the commit being dragged. If you want to re-arrange commits within your stack, consider using ",(0,a.mdx)("a",{parentName:"p",href:"/docs/commands/histedit"},(0,a.mdx)("inlineCode",{parentName:"a"},"sl histedit")),"."),(0,a.mdx)("h3",{id:"running-commands"},"Running commands"),(0,a.mdx)("p",null,"Buttons in ISL run Sapling commands for you.\nFor example, there is a ",(0,a.mdx)(i.mY,{name:"pull",linkText:"Pull",mdxType:"Command"})," button at the top left to pull the latest changes from upstream."),(0,a.mdx)("p",null,"While a command is running, you will see progress information at the bottom of the screen.\nThis is also where you can see error messages if something goes wrong when running a command.\nISL shows the arguments used to run commands, so you could replicate the behavior on the CLI if you want to."),(0,a.mdx)(i.RJ,{alt:"Command Progress",light:"/img/isl/command_progress_light.png",dark:"/img/isl/command_progress_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("p",null,"Some commands like ",(0,a.mdx)(i.Xj,{name:"status",mdxType:"SLCommand"})," will run automatically in the background to fetch data so the UI is always up to date."),(0,a.mdx)("p",null,"Commands will automatically queue up to be run as you interact with the UI. ISL allows you to continue to perform additional actions\nwhile previous commands are running or queued up. This is kind of like chaining together commands on the CLI: ",(0,a.mdx)("inlineCode",{parentName:"p"},"sl pull && sl rebase main && sl goto main"),".\nSimilar to ",(0,a.mdx)("inlineCode",{parentName:"p"},"&&")," on the CLI, if any command along the way fails or hits merge conflicts, all further queued commands will be cancelled."),(0,a.mdx)("h3",{id:"making-commits-and-amending"},"Making commits and amending"),(0,a.mdx)("p",null,"Changes to files in your working copy appear automatically in ISL,\njust like if you had run ",(0,a.mdx)(i.Xj,{name:"status",mdxType:"SLCommand"}),".\nThe color and icon next to files shows you if a file was modified, added, or removed. You can click on files to open them in your Operating System's\ndefault program for that file type."),(0,a.mdx)(i.RJ,{alt:"Uncommitted Changes",light:"/img/isl/uncommitted_changes_light.png",dark:"/img/isl/uncommitted_changes_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("p",null,"Underneath your uncommitted changes, there's a ",(0,a.mdx)("strong",{parentName:"p"},"Commit")," button and an ",(0,a.mdx)("strong",{parentName:"p"},"Amend")," button.\n",(0,a.mdx)("strong",{parentName:"p"},"Commit")," will create a new commit out of your changes.\n",(0,a.mdx)("strong",{parentName:"p"},"Amend")," will update the previous commit with your newest changes."),(0,a.mdx)("p",null,"When hovering on these buttons, you'll see there's also additional ",(0,a.mdx)("strong",{parentName:"p"},"Commit as...")," and ",(0,a.mdx)("strong",{parentName:"p"},"Amend as...")," buttons to first write or update\nthe commit message before running commit/amend. Clicking these buttons opens up the commit form sidebar on the right side,\nwhere you can write a detailed commit message. When you're satisfied with your message, the ",(0,a.mdx)("em",{parentName:"p"},"Commit")," and ",(0,a.mdx)("em",{parentName:"p"},"Amend")," buttons at the bottom right will\nlet you create or amend your commit using your message."),(0,a.mdx)(i.RJ,{alt:"Commit Form",light:"/img/isl/commit_as_light.png",dark:"/img/isl/commit_as_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("h3",{id:"interacting-with-code-review"},"Interacting with code review"),(0,a.mdx)("admonition",{type:"tip"},(0,a.mdx)("p",{parentName:"admonition"},"In order to interact with GitHub for code review in ISL, be sure to install the ",(0,a.mdx)("inlineCode",{parentName:"p"},"gh")," GitHub CLI. ",(0,a.mdx)("a",{parentName:"p",href:"/docs/git/intro"},"Learn more."))),(0,a.mdx)("p",null,"ISL considers code review an integral part of the source control workflow. When making commits, you usually want to submit it for review.\nIn the commit form on the right, ISL has a button to ",(0,a.mdx)("em",{parentName:"p"},"Commit and Submit"),", as well as ",(0,a.mdx)("em",{parentName:"p"},"Amend and Submit"),"."),(0,a.mdx)("p",null,"These will run a submit command on your stack of commits to submit them for code review on GitHub."),(0,a.mdx)("p",null,"You have two options for which command to use to submit for GitHub, ",(0,a.mdx)(i.Xj,{name:"ghstack",mdxType:"SLCommand"})," and ",(0,a.mdx)(i.Xj,{name:"pr",mdxType:"SLCommand"}),".\nISL will prompt you for your choice the first time you try to submit. This can also be controlled by setting ",(0,a.mdx)("inlineCode",{parentName:"p"},"github.preferred_submit_command")," to ",(0,a.mdx)("inlineCode",{parentName:"p"},"ghstack")," or ",(0,a.mdx)("inlineCode",{parentName:"p"},"pr"),":"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"sl config --local github.preferred_submit_command <ghstack or pr>\n")),(0,a.mdx)("p",null,"See documentation on ",(0,a.mdx)("a",{parentName:"p",href:"/docs/git/intro"},"Using Sapling with GitHub")," for more information."),(0,a.mdx)(i.RJ,{alt:"Pull Request Badges",light:"/img/isl/pr_light.png",dark:"/img/isl/pr_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("p",null,"Commits in your tree which are associated with a GitHub Pull Request will show a badge underneath showing the status of that Pull Request.\nYou can click this badge to open the Pull Request in GitHub (or ",(0,a.mdx)("a",{parentName:"p",href:"../introduction/getting-started#browsing-pull-requests"},"configure it to open alternate domains"),")."),(0,a.mdx)("p",null,"This badge also shows the CI build status and how many comments there are."),(0,a.mdx)("h3",{id:"resolving-merge-conflicts"},"Resolving merge conflicts"),(0,a.mdx)("p",null,"Running some commands like ",(0,a.mdx)(i.Xj,{name:"rebase",mdxType:"SLCommand"})," can sometimes lead to merge conflicts. When merge conflicts are detected, ISL will\nchange the list of uncommitted changes into a list of unresolved conflicts."),(0,a.mdx)(i.RJ,{alt:"Merge Conflicts",light:"/img/isl/conflicts_light.png",dark:"/img/isl/conflicts_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("p",null,"After opening each file and resolving the conflict markers,\nyou can click the checkmark next to each file in ISL to mark it as resolved.\nWhen all files have been resolved, you are free to continue the command that led to conflicts."),(0,a.mdx)("p",null,"It is possible to hit merge conflicts multiple times, for example, when rebasing an entire stack of commits, as each commit is checked for conflicts one-by-one."),(0,a.mdx)(i.RJ,{alt:"Resolved Merge Conflicts",light:"/img/isl/conflicts_resolved_light.png",dark:"/img/isl/conflicts_resolved_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("h3",{id:"comparing-changes"},"Comparing changes"),(0,a.mdx)("p",null,"ISL includes a comparison view to quickly see all your changes, similar to  ",(0,a.mdx)(i.Xj,{name:"diff",mdxType:"SLCommand"}),"\nOne common use case is to look over all your uncommitted local changes before you submit them for code review."),(0,a.mdx)("p",null,"Just above your uncommitted changes, there's a ",(0,a.mdx)("inlineCode",{parentName:"p"},"View Changes")," button to open the comparison view in Uncommitted Changes mode.\nIn the comparison view, you'll see a split diff view of each file you've changed. You can also access this view with the shortcut ",(0,a.mdx)("inlineCode",{parentName:"p"},"Command+'"),"."),(0,a.mdx)(i.RJ,{alt:"Comparison View",light:"/img/isl/comparison_light.png",dark:"/img/isl/comparison_dark.png",mdxType:"ThemedImage"}),(0,a.mdx)("p",null,"The comparison view supports other comparisons as well."),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Uncommitted Changes"),": As mentioned, shows changes to your working copy that haven't been committed or amended yet. This is all the changes of the files ",(0,a.mdx)("inlineCode",{parentName:"li"},"sl status")," shows by default. Shortcut: ",(0,a.mdx)("inlineCode",{parentName:"li"},"Command+'"),"."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Head Changes"),": Shows all the changes in the current commit, plus any uncommitted changes on top of that. Useful to see what the most recent commit will look like after amending. Shortcut: ",(0,a.mdx)("inlineCode",{parentName:"li"},"Command+Shift+'")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Stack Changes"),": Shows all the changes in your stack of commits going back to the main branch, plus any uncommitted changes. Useful to see absolutely everything you've changed."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Committed Changes"),': Shows the changes in a specific commit. This is accessible by selecting a commit then clicking on "View Changes in ',"<","hash",">",'". Unlike the other comparisons, this does not include your uncommitted changes.')),(0,a.mdx)("p",null,"The comparison view is currently ",(0,a.mdx)("em",{parentName:"p"},"read-only"),"."),(0,a.mdx)("h2",{id:"speeding-up-change-detection-with-watchman"},"Speeding up change detection with Watchman"),(0,a.mdx)("p",null,"In order to detect when files have changed in your repository, ISL must occasionally run ",(0,a.mdx)("inlineCode",{parentName:"p"},"sl")," commands to check for changes.\nTo reduce resource usage and speed up how quickly changes are detected, ISL can optionally use ",(0,a.mdx)("a",{parentName:"p",href:"https://facebook.github.io/watchman/"},"Watchman"),", a file watching service.\nIf Watchman is installed on your path, it will automatically be used.\nNote that your repository must also have a ",(0,a.mdx)("a",{parentName:"p",href:"https://facebook.github.io/watchman/docs/config.html"},(0,a.mdx)("inlineCode",{parentName:"a"},".watchmanconfig"))," in the root directory to make use of this feature."),(0,a.mdx)("h2",{id:"connecting-to-isl-running-on-another-machine"},"Connecting to ISL running on another machine"),(0,a.mdx)("p",null,"If you are using Sapling on a remote machine, but want to use ISL, you have two options:"),(0,a.mdx)("h3",{id:"host-with-available-ports"},"Host with available ports"),(0,a.mdx)("p",null,"If you are using Sapling on a remote machine that is able to open ports to the outside world, choose a port like ",(0,a.mdx)("inlineCode",{parentName:"p"},"5000")," and pass it as the ",(0,a.mdx)("inlineCode",{parentName:"p"},"-p")," argument to ",(0,a.mdx)("inlineCode",{parentName:"p"},"web")," when launching it on the remote host:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"alyssa@example.com:/home/alyssa/sapling$ sl isl --no-open -p 5000\nlaunching web server for Interactive Smartlog...\nListening on http://localhost:5000/?token=a6d646073f28ef2fd09a89bed93e89f4&cwd=%2Fhome%2Falyssa%2Fsapling\nServer logs will be written to /dev/shm/tmp/isl-server-logqrqvvN/isl-server.log\n")),(0,a.mdx)("p",null,"Assuming your remote hostname is ",(0,a.mdx)("inlineCode",{parentName:"p"},"example.com"),", take the URL that ",(0,a.mdx)(i.Xj,{name:"web",mdxType:"SLCommand"})," printed out and replace ",(0,a.mdx)("inlineCode",{parentName:"p"},"localhost")," with the hostname like so:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"http://example.com:5000/?token=a6d646073f28ef2fd09a89bed93e89f4&cwd=%2Fhome%2Falyssa%2Fsapling\n")),(0,a.mdx)("p",null,"You should be able to open this URL in your local browser to access ISL."),(0,a.mdx)("h3",{id:"host-with-no-available-ports"},"Host with no available ports"),(0,a.mdx)("p",null,"If you are running Sapling on a host where you do not have permissions to open ports to the outside world, you may be able to leverage ",(0,a.mdx)("em",{parentName:"p"},"SSH port forwarding")," to access ISL."),(0,a.mdx)("p",null,"On the server:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"alyssa@example.com:/home/alyssa/sapling$ sl isl --no-open -p 5000\nlaunching web server for Interactive Smartlog...\nListening on http://localhost:5000/?token=a6d646073f28ef2fd09a89bed93e89f4&cwd=%2Fhome%2Falyssa%2Fsapling\nServer logs will be written to /dev/shm/tmp/isl-server-logqrqvvN/isl-server.log\n")),(0,a.mdx)("p",null,"On your local machine where you have SSH access to the server:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"ssh -L 4000:localhost:5000 -N alyssa@example.com\n")),(0,a.mdx)("p",null,"Note that this command will stay running in the foreground so long as you remain connected to the remote host. If you lose the connection (perhaps because your computer has gone to sleep), then you will have to run the ",(0,a.mdx)("inlineCode",{parentName:"p"},"ssh")," command again to re-establish the connection."),(0,a.mdx)("p",null,"Then take the original URL that you saw on the server and change the port from ",(0,a.mdx)("strong",{parentName:"p"},(0,a.mdx)("inlineCode",{parentName:"strong"},"5000"))," to ",(0,a.mdx)("strong",{parentName:"p"},(0,a.mdx)("inlineCode",{parentName:"strong"},"4000"))," before trying to open it on your local machine:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"http://localhost:4000/?token=a6d646073f28ef2fd09a89bed93e89f4&cwd=%2Fhome%2Falyssa%2Fsapling\n")))}h.isMDXComponent=!0}}]);