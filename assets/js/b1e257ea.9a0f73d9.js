"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["9340"],{4484:function(e,d,s){s.r(d),s.d(d,{metadata:()=>i,contentTitle:()=>c,default:()=>j,assets:()=>l,toc:()=>h,frontMatter:()=>t});var i=JSON.parse('{"id":"introduction/git-cheat-sheet","title":"Git cheat sheet","description":"Below is a quick cheat sheet for translating a number of Git commands into equivalent Sapling commands.","source":"@site/docs/introduction/git-cheat-sheet.md","sourceDirName":"introduction","slug":"/introduction/git-cheat-sheet","permalink":"/docs/introduction/git-cheat-sheet","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/introduction/git-cheat-sheet.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_position":30},"sidebar":"tutorialSidebar","previous":{"title":"Getting started","permalink":"/docs/introduction/getting-started"},"next":{"title":"Differences from Git","permalink":"/docs/introduction/differences-git"}}'),n=s("85893"),r=s("50065");let t={sidebar_position:30},c="Git cheat sheet",l={},h=[{value:"Cloning, pulling, and pushing",id:"cloning-pulling-and-pushing",level:3},{value:"Understanding the repository",id:"understanding-the-repository",level:3},{value:"Referring to commits",id:"referring-to-commits",level:3},{value:"Working with files",id:"working-with-files",level:3},{value:"Working with commits",id:"working-with-commits",level:3},{value:"Undo, redo, and reverting",id:"undo-redo-and-reverting",level:3},{value:"Working with stacks",id:"working-with-stacks",level:3},{value:"Giving commits names",id:"giving-commits-names",level:3},{value:"Resolving conflicts",id:"resolving-conflicts",level:3}];function x(e){let d={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(d.header,{children:(0,n.jsx)(d.h1,{id:"git-cheat-sheet",children:"Git cheat sheet"})}),"\n",(0,n.jsx)(d.p,{children:"Below is a quick cheat sheet for translating a number of Git commands into equivalent Sapling commands."}),"\n",(0,n.jsxs)(d.p,{children:["You can also use the ",(0,n.jsx)(d.code,{children:"sl githelp"})," command, or ",(0,n.jsx)(d.code,{children:"sl git"})," for short, to automatically translate some git commands into their equivalent Sapling command."]}),"\n",(0,n.jsx)(d.pre,{children:(0,n.jsx)(d.code,{className:"language-sl-shell-example",children:"$ sl githelp -- git clone https://github.com/facebook/sapling\nsl clone https://github.com/facebook/sapling\n\n$ sl git -- checkout 060f340a9 my_file.txt\nsl revert -r 060f340a9 my_file.txt\n"})}),"\n",(0,n.jsx)(d.h3,{id:"cloning-pulling-and-pushing",children:"Cloning, pulling, and pushing"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Clone"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git clone http://github.com/foo my_repo"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl clone http://github.com/foo my_repo"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Pull"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git fetch"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl pull"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Pull a branch"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git fetch origin REFSPEC"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl pull -B BRANCH"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Pull and rebase"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git pull --rebase"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl pull --rebase"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Push to a branch"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git push HEAD:BRANCH"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl push --to BRANCH"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Add a remote"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git remote add REMOTE URL"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl path --add REMOTE URL"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Pull from a remote"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git fetch REMOTE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl pull REMOTE"})})]})]})]}),"\n",(0,n.jsxs)(d.p,{children:["Sapling ",(0,n.jsx)(d.a,{href:"/docs/introduction/differences-git#sapling-may-not-download-all-the-repository-data-during-clonepull",children:"only"})," clones and pulls a subset of remote branches."]}),"\n",(0,n.jsx)(d.h3,{id:"understanding-the-repository",children:"Understanding the repository"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Your commits"}),(0,n.jsx)(d.td,{children:"N/A"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Current history"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git log"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl log"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Edited files"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git status"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl status"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Current hash"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rev-parse HEAD"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl whereami"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Pending changes"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git diff"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl diff"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Current commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git show"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl show"})})]})]})]}),"\n",(0,n.jsx)(d.h3,{id:"referring-to-commits",children:"Referring to commits"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Current commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"HEAD"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"."})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Parent commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"HEAD^"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:".^"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"All local commits"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"N/A"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"draft()"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Commits in branch X but not Y"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"Y..X"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"X % Y"})})]})]})]}),"\n",(0,n.jsxs)(d.p,{children:["See ",(0,n.jsx)(d.code,{children:"sl help revset"})," for more ways of referencing commits."]}),"\n",(0,n.jsx)(d.h3,{id:"working-with-files",children:"Working with files"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Add new file"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git add FILE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl add FILE"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Un-add new File"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rm --cached FILE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl forget FILE"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Remove file"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rm FILE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl rm FILE"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Rename file"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git mv OLD NEW"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl mv OLD NEW"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Copy file"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"cp OLD NEW"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl cp OLD NEW"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Add/remove all files"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git add -A ."})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl addremove"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Undo changes"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git checkout -- FILE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl revert FILE"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Undo all changes"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git reset --hard"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl revert --all"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Delete untracked files"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git clean -f"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl clean"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Output file content"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git cat-file -p COMMIT:FILE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl cat -r COMMIT FILE"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Show blame"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git blame FILE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl blame FILE"})})]})]})]}),"\n",(0,n.jsx)(d.h3,{id:"working-with-commits",children:"Working with commits"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Commit changes"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git commit -a"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl commit"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Modify commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git commit -a --amend"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl amend"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Move to commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git checkout COMMIT"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl goto COMMIT"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Remove current commit"}),(0,n.jsxs)(d.td,{children:[(0,n.jsx)(d.code,{children:"git reset --hard HEAD"}),"^"]}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl hide ."})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Edit message"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git commit --amend"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl metaedit"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Rebase commits"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rebase main"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl rebase -d main"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Complex rebase"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rebase --onto DEST BOTTOM^ TOP"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl rebase -d DEST -r BOTTOM::TOP"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Rebase all"}),(0,n.jsx)(d.td,{children:"N/A"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl rebase -d main -r 'draft()'"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Interactive rebase"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rebase -i"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl histedit"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Interactive commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git add -p"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl commit -i / sl amend -i"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Cherry-pick"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git cherry-pick COMMIT"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl graft COMMIT"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Stash changes"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git stash"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl shelve"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Unstash changes"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git stash pop"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl unshelve"})})]})]})]}),"\n",(0,n.jsx)(d.h3,{id:"undo-redo-and-reverting",children:"Undo, redo, and reverting"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Undo commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git reset --soft HEAD^"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl uncommit"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Undo partial commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git reset --soft HEAD^ FILE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl uncommit FILE"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Undo amend"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git reset HEAD@{1}"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl unamend"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Undo rebase/etc"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git reset --hard HEAD@{1}"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl undo"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Revert already landed commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git revert COMMIT"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl backout COMMIT"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"View recent commits"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git reflog"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl journal"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Recover commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git reset COMMIT"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl unhide COMMIT"})})]})]})]}),"\n",(0,n.jsx)(d.h3,{id:"working-with-stacks",children:"Working with stacks"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Modify middle commit"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rebase -i"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl goto COMMIT && sl amend"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Move up/down the stack"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rebase -i"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl prev / sl next"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Squash last two commits"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git reset --soft HEAD^ && git commit --amend"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl fold --from .^"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Split a commit into two"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"N/A"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl split"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Reorder commits"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git rebase -i"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl histedit"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Amend down into stack"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"N/A"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl absorb"})})]})]})]}),"\n",(0,n.jsx)(d.h3,{id:"giving-commits-names",children:"Giving commits names"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Listing branches"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git branch"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl bookmark"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Create branch/bookmark"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git branch NAME"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl book NAME"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Switch to branch"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git checkout NAME"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl goto NAME"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Delete a branch"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git branch -d NAME"})}),(0,n.jsxs)(d.td,{children:[(0,n.jsx)(d.code,{children:"sl book -d NAME"})," (deletes just the bookmark name) / ",(0,n.jsx)(d.code,{children:"sl book -D NAME"})," (deletes the bookmark name and hides the commits)"]})]})]})]}),"\n",(0,n.jsx)(d.h3,{id:"resolving-conflicts",children:"Resolving conflicts"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{}),(0,n.jsx)(d.th,{children:"Git"}),(0,n.jsx)(d.th,{children:"Sapling"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"List unresolved conflicts"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git diff --name-only --diff-filter=U"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl resolve --list"})})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:"Mark a file resolved"}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"git add FILE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"sl resolve -m FILE"})})]})]})]})]})}function j(e={}){let{wrapper:d}={...(0,r.a)(),...e.components};return d?(0,n.jsx)(d,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}},50065:function(e,d,s){s.d(d,{Z:function(){return c},a:function(){return t}});var i=s(67294);let n={},r=i.createContext(n);function t(e){let d=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(d):{...d,...e}},[d,e])}function c(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),i.createElement(r.Provider,{value:d},e.children)}}}]);