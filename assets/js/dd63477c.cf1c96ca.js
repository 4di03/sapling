"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4726],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>m,MDXProvider:()=>p,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>s});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function d(){return d=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},d.apply(this,arguments)}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},d=Object.keys(e);for(r=0;r<d.length;r++)t=d[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(r=0;r<d.length;r++)t=d[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),s=function(e){return function(n){var t=c(n.components);return r.createElement(e,d({},n,{components:t}))}},c=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(m.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,d=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=c(t),p=a,f=s["".concat(o,".").concat(p)]||s[p]||u[p]||d;return t?r.createElement(f,i(i({ref:n},m),{},{components:t})):r.createElement(f,i({ref:n},m))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var d=t.length,o=new Array(d);o[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var m=2;m<d;m++)o[m]=t[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},25623:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>d,metadata:()=>i,toc:()=>m});var r=t(83117),a=(t(67294),t(3905));const d={sidebar_position:2},o=void 0,i={unversionedId:"commands/addremove",id:"commands/addremove",title:"addremove",description:"addremove | addrm",source:"@site/docs/commands/addremove.md",sourceDirName:"commands",slug:"/commands/addremove",permalink:"/docs/commands/addremove",draft:!1,editUrl:"https://github.com/facebook/sapling/tree/main/website/docs/commands/addremove.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"add",permalink:"/docs/commands/add"},next:{title:"amend",permalink:"/docs/commands/amend"}},l={},m=[{value:"addremove | addrm",id:"addremove--addrm",level:2},{value:"arguments",id:"arguments",level:2}],s={toc:m};function c(e){let{components:n,...t}=e;return(0,a.mdx)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h2",{id:"addremove--addrm"},"addremove | addrm"),(0,a.mdx)("p",null,(0,a.mdx)("strong",{parentName:"p"},"add all new files, delete all missing files")),(0,a.mdx)("p",null,"Start tracking all new files and stop tracking all missing files\nin the working copy. As with ",(0,a.mdx)("inlineCode",{parentName:"p"},"sl add"),", these changes take\neffect at the next commit."),(0,a.mdx)("p",null,"Unless file names are given, new files are ignored if they match any of\nthe patterns in ",(0,a.mdx)("inlineCode",{parentName:"p"},".gitignore"),"."),(0,a.mdx)("p",null,"Use the ",(0,a.mdx)("inlineCode",{parentName:"p"},"-s/--similarity")," option to detect renamed files. This\noption takes a percentage between 0 (disabled) and 100 (files must\nbe identical) as its parameter. With a parameter greater than 0,\nthis compares every removed file with every added file and records\nthose similar enough as renames. Detecting renamed files this way\ncan be expensive. After using this option, ",(0,a.mdx)("inlineCode",{parentName:"p"},"sl status -C")," can be\nused to check which files were identified as moved or renamed. If\nnot specified, ",(0,a.mdx)("inlineCode",{parentName:"p"},"-s/--similarity")," defaults to 100 and only renames of\nidentical files are detected."),(0,a.mdx)("p",null,"Examples:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Files bar.c and foo.c are new,  while foobar.c has been removed (without using ",(0,a.mdx)("inlineCode",{parentName:"li"},"sl remove"),")  from the repository:")),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"$ ls\nbar.c foo.c\n$ sl status\n! foobar.c\n? bar.c\n? foo.c\n$ sl addremove\nadding bar.c\nadding foo.c\nremoving foobar.c\n$ sl status\nA bar.c\nA foo.c\nR foobar.c\n")),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"A file foobar.c was moved to foo.c without using ",(0,a.mdx)("inlineCode",{parentName:"li"},"sl rename"),".  Afterwards, it was edited slightly:")),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"$ ls\nfoo.c\n$ sl status\n! foobar.c\n? foo.c\n$ sl addremove --similarity 90\nremoving foobar.c\nadding foo.c\nrecording removal of foobar.c as rename to foo.c (94% similar)\n$ sl status -C\nA foo.c\n  foobar.c\nR foobar.c\n")),(0,a.mdx)("p",null,"Returns 0 if all files are successfully added/removed."),(0,a.mdx)("h2",{id:"arguments"},"arguments"),(0,a.mdx)("table",null,(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,a.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,a.mdx)("th",{parentName:"tr",align:null},"default"),(0,a.mdx)("th",{parentName:"tr",align:null},"description"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"-s")),(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"--similarity")),(0,a.mdx)("td",{parentName:"tr",align:null}),(0,a.mdx)("td",{parentName:"tr",align:null},"guess renamed files by similarity (0","<","=s","<","=100)")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"-I")),(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"--include")),(0,a.mdx)("td",{parentName:"tr",align:null}),(0,a.mdx)("td",{parentName:"tr",align:null},"include files matching the given patterns")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"-X")),(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"--exclude")),(0,a.mdx)("td",{parentName:"tr",align:null}),(0,a.mdx)("td",{parentName:"tr",align:null},"exclude files matching the given patterns")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"-n")),(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"--dry-run")),(0,a.mdx)("td",{parentName:"tr",align:null}),(0,a.mdx)("td",{parentName:"tr",align:null},"do not perform actions, just print output")))))}c.isMDXComponent=!0}}]);