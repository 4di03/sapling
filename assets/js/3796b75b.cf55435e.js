"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2388],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>p,MDXProvider:()=>x,mdx:()=>g,useMDXComponents:()=>u,withMDXComponents:()=>o});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),o=function(e){return function(t){var n=u(t.components);return a.createElement(e,r({},t,{components:n}))}},u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},x=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},N=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),o=u(n),x=l,N=o["".concat(d,".").concat(x)]||o[x]||s[x]||r;return n?a.createElement(N,m(m({ref:t},p),{},{components:n})):a.createElement(N,m({ref:t},p))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,d=new Array(r);d[0]=N;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m.mdxType="string"==typeof e?e:l,d[1]=m;for(var p=2;p<r;p++)d[p]=n[p];return a.createElement.apply(null,d)}return a.createElement.apply(null,n)}N.displayName="MDXCreateElement"},12822:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>m,toc:()=>p});var a=n(83117),l=(n(67294),n(3905));const r={sidebar_position:26},d=void 0,m={unversionedId:"commands/pr",id:"commands/pr",title:"pr",description:"pr",source:"@site/docs/commands/pr.md",sourceDirName:"commands",slug:"/commands/pr",permalink:"/docs/commands/pr",draft:!1,editUrl:"https://github.com/facebookexperimental/eden/tree/main/website/docs/commands/pr.md",tags:[],version:"current",sidebarPosition:26,frontMatter:{sidebar_position:26},sidebar:"tutorialSidebar",previous:{title:"next",permalink:"/docs/commands/next"},next:{title:"prev",permalink:"/docs/commands/prev"}},i={},p=[{value:"pr",id:"pr",level:2},{value:"subcommands",id:"subcommands",level:2},{value:"s|submit",id:"ssubmit",level:3},{value:"pull",id:"pull",level:3},{value:"link",id:"link",level:3},{value:"unlink",id:"unlink",level:3},{value:"follow",id:"follow",level:3},{value:"list",id:"list",level:3}],o={toc:p};function u(e){let{components:t,...n}=e;return(0,l.mdx)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("h2",{id:"pr"},"pr"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"exchange local commit data with GitHub pull requests")),(0,l.mdx)("h2",{id:"subcommands"},"subcommands"),(0,l.mdx)("h3",{id:"ssubmit"},"s|submit"),(0,l.mdx)("p",null,"create or update GitHub pull requests from local commits"),(0,l.mdx)("p",null,"Commit(s) will be pushed to ",(0,l.mdx)("inlineCode",{parentName:"p"},"default-push"),", if configured, else\n",(0,l.mdx)("inlineCode",{parentName:"p"},"default")," (see ",(0,l.mdx)("inlineCode",{parentName:"p"},"sl help urls")," and ",(0,l.mdx)("inlineCode",{parentName:"p"},"sl help path"),")."),(0,l.mdx)("p",null,"Pull request(s) will be created against ",(0,l.mdx)("inlineCode",{parentName:"p"},"default"),". If\n",(0,l.mdx)("inlineCode",{parentName:"p"},"default")," is a fork, they will be created against default's\nupstream repository."),(0,l.mdx)("p",null,"Returns 0 on success."),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,l.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,l.mdx)("th",{parentName:"tr",align:null},"default"),(0,l.mdx)("th",{parentName:"tr",align:null},"description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-s")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--stack")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"false")),(0,l.mdx)("td",{parentName:"tr",align:null},"also include draft ancestors")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-m")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--message")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"message describing changes to updated commits")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-d")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--draft")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"false")),(0,l.mdx)("td",{parentName:"tr",align:null},"mark new pull requests as draft")))),(0,l.mdx)("h3",{id:"pull"},"pull"),(0,l.mdx)("p",null,"i","mport a pull request into your working copy"),(0,l.mdx)("p",null,"The PULL_REQUEST can be specified as either a URL:\n",(0,l.mdx)("inlineCode",{parentName:"p"},"https://github.com/facebook/sapling/pull/321"),"\nor just the PR number within the GitHub repository identified by\n",(0,l.mdx)("inlineCode",{parentName:"p"},"sl config paths.default"),"."),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,l.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,l.mdx)("th",{parentName:"tr",align:null},"default"),(0,l.mdx)("th",{parentName:"tr",align:null},"description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-g")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--goto")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"false")),(0,l.mdx)("td",{parentName:"tr",align:null},"goto the pull request after importing it")))),(0,l.mdx)("h3",{id:"link"},"link"),(0,l.mdx)("p",null,"identify a commit as the head of a GitHub pull request"),(0,l.mdx)("p",null,"A PULL_REQUEST can be specified in a number of formats:"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("p",{parentName:"li"},"GitHub URL to the PR: ",(0,l.mdx)("a",{parentName:"p",href:"https://github.com/facebook/react/pull/42"},"facebook/react#42"))),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("p",{parentName:"li"},"Integer: Number for the PR. Uses 'paths.upstream' as the target repo,    if specified; otherwise, falls back to 'paths.default'."))),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,l.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,l.mdx)("th",{parentName:"tr",align:null},"default"),(0,l.mdx)("th",{parentName:"tr",align:null},"description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-r")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--rev")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"revision to link")))),(0,l.mdx)("h3",{id:"unlink"},"unlink"),(0,l.mdx)("p",null,"remove a commit's association with a GitHub pull request"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,l.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,l.mdx)("th",{parentName:"tr",align:null},"default"),(0,l.mdx)("th",{parentName:"tr",align:null},"description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-r")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--rev")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"revisions to unlink")))),(0,l.mdx)("h3",{id:"follow"},"follow"),(0,l.mdx)("p",null,"join the nearest desecendant's pull request"),(0,l.mdx)("p",null,"Marks commits to become part of their nearest desecendant's pull request\ninstead of starting as the head of a new pull request."),(0,l.mdx)("p",null,"Use ",(0,l.mdx)("inlineCode",{parentName:"p"},"pr unlink")," to undo."),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,l.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,l.mdx)("th",{parentName:"tr",align:null},"default"),(0,l.mdx)("th",{parentName:"tr",align:null},"description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-r")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--rev")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"revisions to follow the next pull request")))),(0,l.mdx)("h3",{id:"list"},"list"),(0,l.mdx)("p",null,"calls ",(0,l.mdx)("inlineCode",{parentName:"p"},"gh pr list [flags]")," with the current repo as the value of --repo"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,l.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,l.mdx)("th",{parentName:"tr",align:null},"default"),(0,l.mdx)("th",{parentName:"tr",align:null},"description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--app")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"filter by GitHub App author")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-a")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--assignee")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"filter by assignee")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-A")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--author")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"filter by author")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-B")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--base")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"filter by base branch")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-d")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--draft")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"false")),(0,l.mdx)("td",{parentName:"tr",align:null},"filter by draft state")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-H")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--head")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"filter by head branch")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-q")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--jq")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"filter JSON output using a jq expression")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--json")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"output JSON with the specified fields")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-l")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--label")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"filter by label")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-L")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--limit")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"30")),(0,l.mdx)("td",{parentName:"tr",align:null},"maximum number of items to fetch (default 30)")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-S")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--search")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"search pull requests with query")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-s")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--state")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"filter by state: {open")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-t")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--template")),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},'format JSON output using a Go template; see "gh help formatting"')),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"-w")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"--web")),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("inlineCode",{parentName:"td"},"false")),(0,l.mdx)("td",{parentName:"tr",align:null},"list pull requests in the web browser")))))}u.isMDXComponent=!0}}]);