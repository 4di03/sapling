"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["5183"],{98202:function(e,n,t){t.r(n),t.d(n,{metadata:()=>s,contentTitle:()=>i,default:()=>a,assets:()=>o,toc:()=>l,frontMatter:()=>c});var s=JSON.parse('{"id":"commands/prev","title":"prev","description":"previous | prev","source":"@site/docs/commands/prev.md","sourceDirName":"commands","slug":"/commands/prev","permalink":"/docs/commands/prev","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/prev.md","tags":[],"version":"current","sidebarPosition":28,"frontMatter":{"sidebar_position":28},"sidebar":"tutorialSidebar","previous":{"title":"pr","permalink":"/docs/commands/pr"},"next":{"title":"pull","permalink":"/docs/commands/pull"}}'),r=t("85893"),d=t("50065");let c={sidebar_position:28},i=void 0,o={},l=[{value:"previous | prev",id:"previous--prev",level:2},{value:"arguments",id:"arguments",level:2}];function h(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"previous--prev",children:"previous | prev"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"check out an ancestor commit"})}),"\n",(0,r.jsxs)(n.p,{children:["Update to an ancestor commit of the current commit. When working with a stack\nof commits, you can use ",(0,r.jsx)(n.code,{children:"sl previous"})," to move down your stack with ease."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"--newest"})," flag to always pick the newest of multiple parents commits.  You can set ",(0,r.jsx)(n.code,{children:"amend.alwaysnewest"})," to true in your global Sapling config file to make  this the default."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"--merge"})," flag to bring along uncommitted changes to the destination  commit."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"--bookmark"})," flag to move to the first ancestor commit with a bookmark."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Move 1 level down the stack:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sl prev\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Move 2 levels down the stack:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sl prev 2\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Move to the bottom of the stack:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sl prev --bottom\n"})}),"\n",(0,r.jsx)(n.h2,{id:"arguments",children:"arguments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"shortname"}),(0,r.jsx)(n.th,{children:"fullname"}),(0,r.jsx)(n.th,{children:"default"}),(0,r.jsx)(n.th,{children:"description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--newest"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"always pick the newest parent when a commit has multiple parents"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--bottom"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"update to the lowest non-public ancestor of the current commit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--bookmark"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"update to the first ancestor with a bookmark"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--no-activate-bookmark"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"do not activate the bookmark on the destination commit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-C"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--clean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"discard uncommitted changes (no backup)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-B"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--move-bookmark"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"move active bookmark"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-m"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--merge"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"merge uncommitted changes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-c"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--check"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"require clean working directory"})]})]})]})]})}function a(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return i},a:function(){return c}});var s=t(67294);let r={},d=s.createContext(r);function c(e){let n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);