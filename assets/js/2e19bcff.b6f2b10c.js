"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3649],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>o,MDXProvider:()=>s,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>p});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(){return m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},m.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},m=Object.keys(e);for(a=0;a<m.length;a++)n=m[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(a=0;a<m.length;a++)n=m[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){return function(t){var n=c(t.components);return a.createElement(e,m({},t,{components:n}))}},c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},x=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,m=e.originalType,l=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),p=c(n),s=r,x=p["".concat(l,".").concat(s)]||p[s]||u[s]||m;return n?a.createElement(x,i(i({ref:t},o),{},{components:n})):a.createElement(x,i({ref:t},o))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var m=n.length,l=new Array(m);l[0]=x;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var o=2;o<m;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}x.displayName="MDXCreateElement"},12184:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>m,metadata:()=>i,toc:()=>o});var a=n(83117),r=(n(67294),n(3905));const m={sidebar_position:9},l=void 0,i={unversionedId:"commands/commit",id:"commands/commit",title:"commit",description:"commit | ci",source:"@site/docs/commands/commit.md",sourceDirName:"commands",slug:"/commands/commit",permalink:"/docs/commands/commit",draft:!1,editUrl:"https://github.com/facebook/sapling/tree/main/website/docs/commands/commit.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"clone",permalink:"/docs/commands/clone"},next:{title:"config",permalink:"/docs/commands/config"}},d={},o=[{value:"commit | ci",id:"commit--ci",level:2},{value:"arguments",id:"arguments",level:2}],p={toc:o};function c(e){let{components:t,...n}=e;return(0,r.mdx)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h2",{id:"commit--ci"},"commit | ci"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"save all pending changes or specified files in a new commit")),(0,r.mdx)("p",null,"Commit changes to the given files to your local repository."),(0,r.mdx)("p",null,"By default, all pending changes (in other words, those reported by\n",(0,r.mdx)("inlineCode",{parentName:"p"},"sl status"),") are committed. If you want to commit only some of your\nchanges, choose one of the following options:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"Specify an exact list of files for which you want changes committed.")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"Use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"-I")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"-X")," flags to match or exclude file names  using a pattern or fileset. See ",(0,r.mdx)("inlineCode",{parentName:"p"},"sl help patterns")," and  ",(0,r.mdx)("inlineCode",{parentName:"p"},"sl help filesets")," for details.")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"Specify the ",(0,r.mdx)("inlineCode",{parentName:"p"},"--interactive")," flag to open a UI to select  individual files, hunks, or lines."))),(0,r.mdx)("p",null,"To meld pending changes into the current commit instead of creating\na new commit, see ",(0,r.mdx)("inlineCode",{parentName:"p"},"sl amend"),"."),(0,r.mdx)("p",null,"If you are committing the result of a merge, such as when merge\nconflicts occur during ",(0,r.mdx)("inlineCode",{parentName:"p"},"sl goto"),", commit all pending changes.\nDo not specify files or use ",(0,r.mdx)("inlineCode",{parentName:"p"},"-I"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"-X"),", or ",(0,r.mdx)("inlineCode",{parentName:"p"},"-i"),"."),(0,r.mdx)("p",null,"Specify the ",(0,r.mdx)("inlineCode",{parentName:"p"},"-m")," flag to include a free-form commit message. If you do\nnot specify ",(0,r.mdx)("inlineCode",{parentName:"p"},"-m"),", Sapling opens your configured editor where you can\nenter a message based on a pre-loaded commit template."),(0,r.mdx)("p",null,"Returns 0 on success, 1 if nothing changed."),(0,r.mdx)("p",null,"If your commit fails, you can find a backup of your commit message in\n",(0,r.mdx)("inlineCode",{parentName:"p"},".sl/last-message.txt"),"."),(0,r.mdx)("p",null,"Examples:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"commit all files ending in .py:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},'sl commit --include "glob:**.py"\n')),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"commit all non-binary files:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},'sl commit --exclude "set:binary()"\n')),(0,r.mdx)("h2",{id:"arguments"},"arguments"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,r.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,r.mdx)("th",{parentName:"tr",align:null},"default"),(0,r.mdx)("th",{parentName:"tr",align:null},"description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-A")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--addremove")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"mark new/missing files as added/removed before committing")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-e")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--edit")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"invoke editor on commit messages")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-i")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--interactive")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"use interactive mode")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-M")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--reuse-message")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"reuse commit message from REV")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-I")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--include")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"include files matching the given patterns")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-X")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--exclude")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"exclude files matching the given patterns")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-m")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--message")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"use text as commit message")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-l")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--logfile")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"read commit message from file")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-d")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--date")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"record the specified date as commit date")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-u")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--user")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"record the specified user as committer")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--no-move-detection")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"disable automatic file move detection")))))}c.isMDXComponent=!0}}]);