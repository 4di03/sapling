"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["155"],{60132:function(e,s,n){n.r(s),n.d(s,{metadata:()=>d,contentTitle:()=>c,default:()=>a,assets:()=>l,toc:()=>o,frontMatter:()=>r});var d=JSON.parse('{"id":"commands/status","title":"status","description":"status | st","source":"@site/docs/commands/status.md","sourceDirName":"commands","slug":"/commands/status","permalink":"/docs/commands/status","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/status.md","tags":[],"version":"current","sidebarPosition":41,"frontMatter":{"sidebar_position":41},"sidebar":"tutorialSidebar","previous":{"title":"ssl","permalink":"/docs/commands/ssl"},"next":{"title":"unamend","permalink":"/docs/commands/unamend"}}'),t=n("85893"),i=n("50065");let r={sidebar_position:41},c=void 0,l={},o=[{value:"status | st",id:"status--st",level:2},{value:"arguments",id:"arguments",level:2}];function h(e){let s={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"status--st",children:"status | st"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"list files with pending changes"})}),"\n",(0,t.jsx)(s.p,{children:"Show status of files in the working copy using the following status\nindicators:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"M = modified\nA = added\nR = removed\nC = clean\n! = missing (deleted by a non-sl command, but still tracked)\n? = not tracked\nI = ignored\n  = origin of the previous file (with --copies)\n"})}),"\n",(0,t.jsxs)(s.p,{children:["By default, shows files that have been modified, added, removed,\ndeleted, or that are unknown (corresponding to the options ",(0,t.jsx)(s.code,{children:"-mardu"}),",\nrespectively). Files that are unmodified, ignored, or the source of\na copy/move operation are not listed."]}),"\n",(0,t.jsxs)(s.p,{children:["To control the exact statuses that are shown, specify the relevant\nflags (like ",(0,t.jsx)(s.code,{children:"-rd"})," to show only files that are removed or deleted).\nAdditionally, specify ",(0,t.jsx)(s.code,{children:"-q/--quiet"})," to hide both unknown and ignored\nfiles."]}),"\n",(0,t.jsxs)(s.p,{children:["To show the status of specific files, provide a list of files to\nmatch. To include or exclude files using patterns or filesets, use\n",(0,t.jsx)(s.code,{children:"-I"})," or ",(0,t.jsx)(s.code,{children:"-X"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["If ",(0,t.jsx)(s.code,{children:"--rev"})," is specified and only one revision is given, it is used as\nthe base revision. If two revisions are given, the differences between\nthem are shown. The ",(0,t.jsx)(s.code,{children:"--change"})," option can also be used as a shortcut\nto list the changed files of a revision from its first parent."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"sl status"})," might appear to disagree with ",(0,t.jsx)(s.code,{children:"sl diff"})," if permissions\nhave changed or a merge has occurred, because the standard diff\nformat does not report permission changes and ",(0,t.jsx)(s.code,{children:"sl diff"})," only\nreports changes relative to one merge parent."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"-t/--terse"})," option abbreviates the output by showing only the directory\nname if all the files in it share the same status. The option takes an\nargument indicating the statuses to abbreviate: 'm' for 'modified', 'a'\nfor 'added', 'r' for 'removed', 'd' for 'deleted', 'u' for 'unknown', 'i'\nfor 'ignored' and 'c' for clean."]}),"\n",(0,t.jsxs)(s.p,{children:["It abbreviates only those statuses which are passed. Note that clean and\nignored files are not displayed with ",(0,t.jsx)(s.code,{children:"--terse ic"})," unless the ",(0,t.jsx)(s.code,{children:"-c/--clean"}),"\nand ",(0,t.jsx)(s.code,{children:"-i/--ignored"})," options are also used."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"-v/--verbose"})," option shows information when the repository is in an\nunfinished merge, shelve, rebase state, etc. You can have this behavior\nturned on by default by enabling the ",(0,t.jsx)(s.code,{children:"commands.status.verbose"})," config option."]}),"\n",(0,t.jsxs)(s.p,{children:["You can skip displaying some of these states by setting\n",(0,t.jsx)(s.code,{children:"commands.status.skipstates"})," to one or more of: 'bisect', 'graft',\n'histedit', 'merge', 'rebase', or 'unshelve'."]}),"\n",(0,t.jsx)(s.p,{children:"Examples:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"show changes in the working directory relative to a  commit:"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"sl status --rev 88a692db8\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["show changes in the working copy relative to the  current directory (see ",(0,t.jsx)(s.code,{children:"sl help patterns"})," for more information):"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"sl status re:\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"show all changes including copies in a commit:"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"sl status --copies --change 88a692db8\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"get a NUL separated list of added files, suitable for xargs:"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"sl status -an0\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"show more information about the repository status, abbreviating  added, removed, modified, deleted, and untracked paths:"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"sl status -v -t mardu\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns 0 on success."}),"\n",(0,t.jsx)(s.h2,{id:"arguments",children:"arguments"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"shortname"}),(0,t.jsx)(s.th,{children:"fullname"}),(0,t.jsx)(s.th,{children:"default"}),(0,t.jsx)(s.th,{children:"description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-A"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--all"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show status of all files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-m"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--modified"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show only modified files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-a"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--added"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show only added files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-r"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--removed"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show only removed files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-d"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--deleted"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show only deleted (but tracked) files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-c"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--clean"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show only files without changes"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-u"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--unknown"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show only unknown (not tracked) files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-i"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--ignored"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show only ignored files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-n"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--no-status"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"hide status prefix"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-C"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--copies"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"show source of copied files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-0"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--print0"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"end filenames with NUL, for use with xargs"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--rev"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"show difference from revision"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--change"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"list the changed files of a revision"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--root-relative"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"show status relative to root"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-I"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--include"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"include files matching the given patterns"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"-X"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--exclude"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"exclude files matching the given patterns"})]})]})]})]})}function a(e={}){let{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},50065:function(e,s,n){n.d(s,{Z:function(){return c},a:function(){return r}});var d=n(67294);let t={},i=d.createContext(t);function r(e){let s=d.useContext(i);return d.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),d.createElement(i.Provider,{value:s},e.children)}}}]);