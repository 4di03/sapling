"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["8845"],{36447:function(e,t,n){n.r(t),n.d(t,{metadata:()=>s,contentTitle:()=>c,default:()=>h,assets:()=>o,toc:()=>a,frontMatter:()=>i});var s=JSON.parse('{"id":"commands/absorb","title":"absorb","description":"absorb | ab","source":"@site/docs/commands/absorb.md","sourceDirName":"commands","slug":"/commands/absorb","permalink":"/docs/commands/absorb","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/absorb.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"Commands","permalink":"/docs/category/commands"},"next":{"title":"add","permalink":"/docs/commands/add"}}'),d=n("85893"),r=n("50065");let i={sidebar_position:0},c=void 0,o={},a=[{value:"absorb | ab",id:"absorb--ab",level:2},{value:"arguments",id:"arguments",level:2}];function l(e){let t={code:"code",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h2,{id:"absorb--ab",children:"absorb | ab"}),"\n",(0,d.jsx)(t.p,{children:(0,d.jsx)(t.strong,{children:"intelligently integrate pending changes into current stack"})}),"\n",(0,d.jsx)(t.p,{children:"Attempt to amend each pending change to the proper commit in your\nstack. Absorb does not write to the working copy."}),"\n",(0,d.jsxs)(t.p,{children:["If absorb cannot find an unambiguous commit to amend for a change, that\nchange will be left in the working copy, untouched. The unabsorbed\nchanges can be observed by ",(0,d.jsx)(t.code,{children:"sl status"})," or ",(0,d.jsx)(t.code,{children:"sl diff"})," afterwards."]}),"\n",(0,d.jsxs)(t.p,{children:["Commits outside the revset ",(0,d.jsx)(t.code,{children:"::. and not public() and not merge()"})," will\nnot be changed."]}),"\n",(0,d.jsx)(t.p,{children:"Commits that become empty after applying the changes will be deleted."}),"\n",(0,d.jsxs)(t.p,{children:["By default, absorb will show what it plans to do and prompt for\nconfirmation.  If you are confident that the changes will be absorbed\nto the correct place, run ",(0,d.jsx)(t.code,{children:"sl absorb -a"})," to apply the changes\nimmediately."]}),"\n",(0,d.jsx)(t.p,{children:"Returns 0 if anything was absorbed, 1 if nothing was absorbed."}),"\n",(0,d.jsx)(t.h2,{id:"arguments",children:"arguments"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"shortname"}),(0,d.jsx)(t.th,{children:"fullname"}),(0,d.jsx)(t.th,{children:"default"}),(0,d.jsx)(t.th,{children:"description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-a"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--apply-changes"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"apply changes without prompting for confirmation"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-d"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--date"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"record the specified date as commit date"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-n"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--dry-run"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"do not perform actions, just print output"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-T"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--template"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"display with template"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-I"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--include"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"include files matching the given patterns"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-X"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--exclude"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"exclude files matching the given patterns"})]})]})]})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return i}});var s=n(67294);let d={},r=s.createContext(d);function i(e){let t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);