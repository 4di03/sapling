load("@fbcode_macros//build_defs:cpp_binary.bzl", "cpp_binary")
load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")

def edenfs(cas = False, os_deps = [], extra_deps = [], suffix = "", srcs = []):
    preffix = "cas_" if cas else ""
    cpp_binary(
        name = "edenfs%s" % suffix,
        srcs = srcs,
        linker_flags = select({
            "DEFAULT": [],
            "ovr_config//os:windows": [
                "/STACK:2097152",  # This was picked arbitrarily as 2 MB
            ],
        }),
        os_deps = os_deps,
        deps = [
            ":%smain" % preffix,
            ":%sserver" % preffix,
        ] + extra_deps,
    )

def main_and_server(cas = False):
    preffix = "cas_" if cas else ""
    cpp_library(
        name = "%smain" % preffix,
        srcs = [
            "EdenMain.cpp",
        ],
        os_deps = [
            (
                "linux",
                [
                    "//eden/fs/store/git:git",
                ],
            ),
        ],
        deps = [
            ":init",
            ":startup_logger",
            ":startup_status_subscriber",
            "//eden/common/telemetry:log_info",
            "//eden/common/telemetry:structured_logger",
            "//eden/common/utils:user_info",
            "//eden/common/utils:utils",
            "//eden/fs:config",
            "//eden/fs/config:config",
            "//eden/fs/inodes:inodes",
            "//eden/fs/privhelper:interface",
            "//eden/fs/privhelper:privhelper",
            "//eden/fs/store:filtered_backing_store",
            "//eden/fs/store:store",
            "//eden/fs/store/filter:hg_sparse_filter",
            "//eden/fs/store/hg:sapling_%sbacking_store" % preffix,
            "//eden/fs/telemetry:hive_logger",
            "//eden/fs/telemetry:log_info",
            "//eden/fs/utils:win_stacktrace",
            "//fb303:function_stat_handler",
            "//fb303:logging",
            "//folly:conv",
            "//folly:map_util",
            "//folly:stop_watch",
            "//folly/executors:function_scheduler",
            "//folly/init:init",
            "//folly/logging:init",
            "//folly/logging:logging",
            "//folly/portability:gflags",
            "//folly/portability:unistd",
            "//thrift/lib/cpp2:flags",
            "//thrift/lib/cpp2:server",
        ],
        exported_deps = [
            ":server",
            "//eden/fs/store:backing_store_interface",
            "//eden/fs/telemetry:activity_recorder",
        ],
    )

    cpp_library(
        name = "%sserver" % preffix,
        srcs = [
            "EdenCPUThreadPool.cpp",
            "EdenServer.cpp",
            "EdenServiceHandler.cpp",
            "EdenStateDir.cpp",
            "PeriodicTask.cpp",
            "ThriftPermissionChecker.cpp",
        ],
        os_deps = [
            # TODO: The edenfs_smartplatform_service dependency fans out to a ton
            # of other dependencies, slowing down OSS builds and tests. We ideally
            # should move it to facebook/main.cpp to avoid the cost in unit tests
            # and OSS builds and tests.
            (
                "linux",
                [
                    "//eden/fs/service/facebook:edenfs_smartplatform_service",
                    "//eden/fs/service/facebook:server_observer",
                ],
            ),
            (
                "macos",
                [
                    "//eden/fs/service/facebook:edenfs_smartplatform_service",
                    "//eden/fs/service/facebook:server_observer",
                ],
            ),
            (
                "windows",
                [
                    "//eden/fs/service/facebook:edenfs_smartplatform_service",
                    "//eden/fs/service/facebook:server_observer",
                    "//eden/fs/notifications:windows_notifier",
                ],
            ),
        ],
        deps = [
            "fbsource//third-party/cpptoml:cpptoml",
            "fbsource//third-party/fmt:fmt",
            ":startup_logger",
            ":startup_status_subscriber",
            ":thrift-streaming-cpp2-types",
            ":thrift_get_object_impl",
            ":thrift_glob_impl",
            ":thrift_startup_status_subscriber",
            ":thrift_util",
            ":usage_service",
            "//eden/common/telemetry:log_info",
            "//eden/common/telemetry:structured_logger_factory",
            "//eden/common/utils:enum",
            "//eden/common/utils:fault_injector",
            "//eden/common/utils:file_utils",
            "//eden/common/utils:process_info_cache",
            "//eden/common/utils:string",
            "//eden/common/utils:user_info",
            "//eden/fs/config:config",
            "//eden/fs/fuse:fuse",
            "//eden/fs/journal:journal",
            "//eden/fs/model:model",
            "//eden/fs/model/git:gitignore",
            "//eden/fs/nfs:nfs_server",
            "//eden/fs/nfs:nfsd3",
            "//eden/fs/notifications:command_notifier",
            "//eden/fs/notifications:null_notifier",
            "//eden/fs/privhelper:interface",
            "//eden/fs/prjfs:prjfs",
            "//eden/fs/store:context",
            "//eden/fs/store:filtered_backing_store",
            "//eden/fs/store:rocksdb",
            "//eden/fs/store:sqlite",
            "//eden/fs/store:store",
            "//eden/fs/store/filter:glob_filter",
            "//eden/fs/store/hg:sapling_%sbacking_store" % preffix,
            "//eden/fs/telemetry:hive_logger",
            "//eden/fs/telemetry:log_info",
            "//eden/fs/telemetry:structured_logger",
            "//eden/fs/telemetry:task_trace",
            "//eden/fs/utils:clock",
            "//eden/fs/utils:eden_error",
            "//eden/fs/utils:eden_task_queue",
            "//eden/fs/utils:fs_channel_types",
            "//eden/fs/utils:matcher",
            "//eden/fs/utils:nfs_socket",
            "//eden/fs/utils:proc_util",
            "//eden/fs/utils:source_location",
            "//fb303:service_data",
            "//folly:conv",
            "//folly:exception",
            "//folly:file_util",
            "//folly:random",
            "//folly:stop_watch",
            "//folly:string",
            "//folly/chrono:conv",
            "//folly/executors:cpu_thread_pool_executor",
            "//folly/executors:serial_executor",
            "//folly/executors/thread_factory:named_thread_factory",
            "//folly/futures:core",
            "//folly/io/async:async_signal_handler",
            "//folly/logging:logging",
            "//folly/portability:gflags",
            "//folly/portability:sys_types",
            "//thrift/lib/cpp/concurrency:thread_manager",
            "//thrift/lib/cpp/util:enum_utils",
            "//thrift/lib/cpp2:server",
            "//thrift/lib/cpp2/async:server_stream",
            "//thrift/lib/cpp2/server:cpp2_conn_context",
            "//thrift/lib/cpp2/server:parallel_concurrency_controller",
            "//thrift/lib/cpp2/server:round_robin_request_pile",
            "//thrift/lib/cpp2/server:separallel_concurrency_controller",
        ],
        exported_deps = [
            ":thrift-cpp2-types",
            ":thrift-streaming-cpp2-services",
            "//eden/common/os:os",
            "//eden/common/telemetry:telemetry",
            "//eden/common/utils:path",
            "//eden/common/utils:ref_ptr",
            "//eden/common/utils:utils",
            "//eden/fs:config",
            "//eden/fs/inodes:inodes",
            "//eden/fs/inodes/overlay:overlay_checker",
            "//eden/fs/store:backing_store_interface",
            "//eden/fs/takeover:takeover",
            "//eden/fs/telemetry:activity_buffer",
            "//eden/fs/telemetry:activity_recorder",
            "//eden/fs/telemetry:stats",
            "//fb303:base_service",
            "//folly:executor",
            "//folly:file",
            "//folly:network_address",
            "//folly:portability",
            "//folly:range",
            "//folly:synchronized",
            "//folly:thread_local",
            "//folly/futures:shared_promise",
            "//folly/io/async:async_base",
            "//folly/portability:sys_stat",
            "//thrift/lib/cpp:event_handler_base",
        ],
        external_deps = [
            "re2",
        ],
    )
