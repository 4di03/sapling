"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["2304"],{82215:function(e,n,t){t.r(n),t.d(n,{metadata:()=>s,contentTitle:()=>c,default:()=>h,assets:()=>d,toc:()=>l,frontMatter:()=>i});var s=JSON.parse('{"id":"commands/clone","title":"clone","description":"clone","source":"@site/docs/commands/clone.md","sourceDirName":"commands","slug":"/commands/clone","permalink":"/docs/commands/clone","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/clone.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"clean","permalink":"/docs/commands/clean"},"next":{"title":"commit","permalink":"/docs/commands/commit"}}'),r=t("85893"),o=t("50065");let i={sidebar_position:8},c=void 0,d={},l=[{value:"clone",id:"clone",level:2},{value:"arguments",id:"arguments",level:2}];function a(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"clone",children:"clone"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"make a copy of an existing repository"})}),"\n",(0,r.jsx)(n.p,{children:"Create a copy of an existing repository in a new directory."}),"\n",(0,r.jsx)(n.p,{children:"If no destination directory name is specified, it defaults to the\nbasename of the source."}),"\n",(0,r.jsx)(n.p,{children:"The location of the source is added to the new repository's\nconfig file as the default to be used for future pulls."}),"\n",(0,r.jsxs)(n.p,{children:["Sources are typically URLs. The following URL schemes are assumed\nto be a Git repo: ",(0,r.jsx)(n.code,{children:"git"}),", ",(0,r.jsx)(n.code,{children:"git+file"}),", ",(0,r.jsx)(n.code,{children:"git+ftp"}),", ",(0,r.jsx)(n.code,{children:"git+ftps"}),",\n",(0,r.jsx)(n.code,{children:"git+http"}),", ",(0,r.jsx)(n.code,{children:"git+https"}),", ",(0,r.jsx)(n.code,{children:"git+ssh"}),", ",(0,r.jsx)(n.code,{children:"ssh"})," and ",(0,r.jsx)(n.code,{children:"https"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Scp-like URLs of the form ",(0,r.jsx)(n.code,{children:"user@host:path"})," are converted to\n",(0,r.jsx)(n.code,{children:"ssh://user@host/path"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Other URL schemes are assumed to point to an SaplingRemoteAPI capable repo."}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"--git"})," option forces the source to be interpreted as a Git repo."]}),"\n",(0,r.jsxs)(n.p,{children:["To check out a particular version, use ",(0,r.jsx)(n.code,{children:"-u/--update"}),", or\n",(0,r.jsx)(n.code,{children:"-U/--noupdate"})," to create a clone with no working copy."]}),"\n",(0,r.jsxs)(n.p,{children:["If specified, the ",(0,r.jsx)(n.code,{children:"--enable-profile"})," option should refer to a\nsparse profile within the source repo to filter the contents of\nthe new working copy. See ",(0,r.jsx)(n.code,{children:"sl help -e sparse"})," for details."]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"clone a remote repository to a new directory named some_repo:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sl clone https://example.com/some_repo\n"})}),"\n",(0,r.jsx)(n.p,{children:"As an experimental feature, if specified the source URL fragment\nis persisted as the repo's main bookmark."}),"\n",(0,r.jsx)(n.p,{children:"Returns 0 on success."}),"\n",(0,r.jsx)(n.h2,{id:"arguments",children:"arguments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"shortname"}),(0,r.jsx)(n.th,{children:"fullname"}),(0,r.jsx)(n.th,{children:"default"}),(0,r.jsx)(n.th,{children:"description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-U"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--noupdate"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"clone an empty working directory"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-u"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--updaterev"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"revision or branch to check out"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--enable-profile"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"enable a sparse profile"})]})]})]})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return i}});var s=t(67294);let r={},o=s.createContext(r);function i(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);