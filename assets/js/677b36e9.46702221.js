"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["346"],{66765:function(e,d,n){n.r(d),n.d(d,{metadata:()=>s,contentTitle:()=>c,default:()=>x,assets:()=>l,toc:()=>o,frontMatter:()=>r});var s=JSON.parse('{"id":"commands/diff","title":"diff","description":"diff | d","source":"@site/docs/commands/diff.md","sourceDirName":"commands","slug":"/commands/diff","permalink":"/docs/commands/diff","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/diff.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"config","permalink":"/docs/commands/config"},"next":{"title":"fold","permalink":"/docs/commands/fold"}}'),i=n("85893"),t=n("50065");let r={sidebar_position:12},c=void 0,l={},o=[{value:"diff | d",id:"diff--d",level:2},{value:"arguments",id:"arguments",level:2}];function h(e){let d={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(d.h2,{id:"diff--d",children:"diff | d"}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.strong,{children:"show differences between commits"})}),"\n",(0,i.jsx)(d.p,{children:"Show the differences between two commits. If only one commit is specified,\nshow the differences between the specified commit and your working copy.\nIf no commits are specified, show your pending changes."}),"\n",(0,i.jsxs)(d.p,{children:["Specify ",(0,i.jsx)(d.code,{children:"-c"})," to see the changes in the specified commit relative to its\nparent."]}),"\n",(0,i.jsxs)(d.p,{children:["By default, this command skips binary files. To override this behavior,\nspecify ",(0,i.jsx)(d.code,{children:"-a"})," to include binary files in the diff."]}),"\n",(0,i.jsxs)(d.p,{children:["By default, diffs are shown using the unified diff format. Specify ",(0,i.jsx)(d.code,{children:"-g"}),"\nto generate diffs in the git extended diff format. For more information,\nsee ",(0,i.jsx)(d.code,{children:"sl help diffs"}),"."]}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.code,{children:"--from-path"})," and ",(0,i.jsx)(d.code,{children:"--to-path"})," allow diffing between directories.\nFiles outside ",(0,i.jsx)(d.code,{children:"--from-path"})," in the left side are ignored. See\n",(0,i.jsx)(d.code,{children:"sl help directorybranching"})," for more information."]}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.code,{children:"sl diff"})," might generate unexpected results during merges because it\ndefaults to comparing against your working copy's first parent commit\nif no commits are specified."]}),"\n",(0,i.jsx)(d.p,{children:"Examples:"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"compare a file in the current working directory to its parent:"}),"\n"]}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{children:"sl diff foo.c\n"})}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"compare two historical versions of a directory, with rename info:"}),"\n"]}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{children:"sl diff --git -r 5be761874:431ec8e07 lib/\n"})}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"get change stats relative to the last change on some date:"}),"\n"]}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{children:"sl diff --stat -r \"date('may 2')\"\n"})}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"diff all newly-added files that contain a keyword:"}),"\n"]}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{children:'sl diff "set:added() and grep(GNU)"\n'})}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"compare a revision and its parents:"}),"\n"]}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{children:"sl diff -c 340f3fef5              # compare against first parent\nsl diff -r 340f3fef5^:340f3fef5   # same using revset syntax\nsl diff -r 340f3fef5^2:340f3fef5  # compare against the second parent\n"})}),"\n",(0,i.jsx)(d.p,{children:"Returns 0 on success."}),"\n",(0,i.jsx)(d.h2,{id:"arguments",children:"arguments"}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"shortname"}),(0,i.jsx)(d.th,{children:"fullname"}),(0,i.jsx)(d.th,{children:"default"}),(0,i.jsx)(d.th,{children:"description"})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-r"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--rev"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"revision"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-c"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--change"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"change made by revision"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-a"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--text"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"treat all files as text"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-g"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--git"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"use git extended diff format"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--binary"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"generate binary diffs in git mode (default)"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--nodates"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"omit dates from diff headers"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--noprefix"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"omit a/ and b/ prefixes from filenames"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-p"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--show-function"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"show which function each change is in"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--reverse"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"produce a diff that undoes the changes"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-w"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--ignore-all-space"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"ignore white space when comparing lines"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-b"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--ignore-space-change"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"ignore changes in the amount of white space"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-B"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--ignore-blank-lines"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"ignore changes whose lines are all blank"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-Z"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--ignore-space-at-eol"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"ignore changes in whitespace at EOL"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-U"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--unified"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"number of lines of context to show"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--stat"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"output diffstat-style summary of changes"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--root"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"produce diffs relative to subdirectory"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--only-files-in-revs"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"only show changes for files modified in the requested revisions"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-I"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--include"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"include files matching the given patterns"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-X"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--exclude"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"exclude files matching the given patterns"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"-s"})}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"--sparse"})}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{children:"only show changes in files in the sparse config"})]})]})]})]})}function x(e={}){let{wrapper:d}={...(0,t.a)(),...e.components};return d?(0,i.jsx)(d,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},50065:function(e,d,n){n.d(d,{Z:function(){return c},a:function(){return r}});var s=n(67294);let i={},t=s.createContext(i);function r(e){let d=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(d):{...d,...e}},[d,e])}function c(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(t.Provider,{value:d},e.children)}}}]);