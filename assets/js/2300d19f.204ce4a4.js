"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["910"],{10242:function(e,n,t){t.r(n),t.d(n,{metadata:()=>i,contentTitle:()=>r,default:()=>a,assets:()=>d,toc:()=>m,frontMatter:()=>s});var i=JSON.parse('{"id":"commands/uncommit","title":"uncommit","description":"uncommit | unc","source":"@site/docs/commands/uncommit.md","sourceDirName":"commands","slug":"/commands/uncommit","permalink":"/docs/commands/uncommit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/uncommit.md","tags":[],"version":"current","sidebarPosition":43,"frontMatter":{"sidebar_position":43},"sidebar":"tutorialSidebar","previous":{"title":"unamend","permalink":"/docs/commands/unamend"},"next":{"title":"undo","permalink":"/docs/commands/undo"}}'),c=t("85893"),o=t("50065");let s={sidebar_position:43},r=void 0,d={},m=[{value:"uncommit | unc",id:"uncommit--unc",level:2},{value:"arguments",id:"arguments",level:2}];function l(e){let n={code:"code",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"uncommit--unc",children:"uncommit | unc"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"uncommit part or all of the current commit"})}),"\n",(0,c.jsxs)(n.p,{children:["Reverse the effects of an ",(0,c.jsx)(n.code,{children:"sl commit"})," operation. When run with no\narguments, hides the current commit and checks out the parent commit,\nbut does not revert the state of the working copy. Changes that were\ncontained in the uncommitted commit become pending changes in the\nworking copy."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"sl uncommit"})," cannot be run on commits that have children. In\nother words, you cannot uncommit a commit in the middle of a\nstack. Similarly, by default, you cannot run ",(0,c.jsx)(n.code,{children:"sl uncommit"})," if\nthere are pending changes in the working copy."]}),"\n",(0,c.jsx)(n.p,{children:"You can selectively uncommit files from the current commit by optionally\nspecifying a list of files to remove. The specified files are removed from\nthe list of changed files in the current commit, but are not modified on\ndisk, so they appear as pending changes in the working copy."}),"\n",(0,c.jsxs)(n.p,{children:["Running ",(0,c.jsx)(n.code,{children:"sl uncommit"})," is similar to running ",(0,c.jsx)(n.code,{children:"sl undo --keep"}),"\nimmediately after ",(0,c.jsx)(n.code,{children:"sl commit"}),". However, unlike ",(0,c.jsx)(n.code,{children:"sl undo"}),", which can\nonly undo a commit if it was the last operation you performed,\n",(0,c.jsx)(n.code,{children:"sl uncommit"})," can uncommit any draft commit in the graph that does\nnot have children."]}),"\n",(0,c.jsx)(n.h2,{id:"arguments",children:"arguments"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"shortname"}),(0,c.jsx)(n.th,{children:"fullname"}),(0,c.jsx)(n.th,{children:"default"}),(0,c.jsx)(n.th,{children:"description"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{}),(0,c.jsx)(n.td,{children:(0,c.jsx)(n.code,{children:"--keep"})}),(0,c.jsx)(n.td,{children:(0,c.jsx)(n.code,{children:"false"})}),(0,c.jsx)(n.td,{children:"allow an empty commit after uncommiting"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:(0,c.jsx)(n.code,{children:"-I"})}),(0,c.jsx)(n.td,{children:(0,c.jsx)(n.code,{children:"--include"})}),(0,c.jsx)(n.td,{}),(0,c.jsx)(n.td,{children:"include files matching the given patterns"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:(0,c.jsx)(n.code,{children:"-X"})}),(0,c.jsx)(n.td,{children:(0,c.jsx)(n.code,{children:"--exclude"})}),(0,c.jsx)(n.td,{}),(0,c.jsx)(n.td,{children:"exclude files matching the given patterns"})]})]})]})]})}function a(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return s}});var i=t(67294);let c={},o=i.createContext(c);function s(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);