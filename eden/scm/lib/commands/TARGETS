load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")

oncall("mercurial_release")

rust_library(
    name = "commands",
    srcs = glob(["src/**/*.rs"]),
    autocargo = {
        "cargo_toml_config": {
            "dependencies_override": {
                "dependencies": {
                    "anyhow": {
                        "features": ["backtrace"],
                    },
                    "cliparser": {"features": ["python"]},
                    "constructors": {"features": ["git"]},
                    "pytracing": {
                        "default-features": False,
                    },
                    "repo": {"features": ["wdir"]},
                },
            },
            "extra_buck_dependencies": {
                "dependencies": [
                    "//eden/scm/saplingnative/bindings/modules/pycheckout:pycheckout",
                    "//eden/scm/saplingnative/bindings/modules/pyedenclient:pyedenclient",
                    "//eden/scm/saplingnative/bindings/modules/pyworkingcopy:pyworkingcopy",
                    "//eden/scm/lib/revisionstore:revisionstore",
                ],
            },
            "features": {
                "default": [],
                "eden": [
                    "clidispatch/eden",
                    "pycheckout/eden",
                    "pyedenclient/eden",
                    "pyworkingcopy/eden",
                    "edenfs-client",
                    "cmdgoto/eden",
                ],
                "fb": [
                    "configloader/fb",
                    "identity/fb",
                    "cmdversion/fb",
                ],
            },
        },
    },
    crate_root = "src/lib.rs",
    features = [
        "eden",
        "fb",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:chrono",
        "fbsource//third-party/rust:comfy-table",
        "fbsource//third-party/rust:ctrlc",
        "fbsource//third-party/rust:fail",
        "fbsource//third-party/rust:flate2",
        "fbsource//third-party/rust:hostname",
        "fbsource//third-party/rust:libc",
        "fbsource//third-party/rust:parking_lot",
        "fbsource//third-party/rust:rand",
        "fbsource//third-party/rust:serde_json",
        "fbsource//third-party/rust:tracing",
        "fbsource//third-party/rust:tracing-subscriber",
        "fbsource//third-party/rust:zstd",
        "//eden/scm/lib/async-runtime:async-runtime",
        "//eden/scm/lib/blackbox:blackbox",
        "//eden/scm/lib/clidispatch:clidispatch",
        "//eden/scm/lib/cliparser:cliparser",
        "//eden/scm/lib/commands/cmdpy:cmdpy",
        "//eden/scm/lib/commands/cmdutil:cmdutil",
        "//eden/scm/lib/commandserver:commandserver",
        "//eden/scm/lib/config/loader:configloader",
        "//eden/scm/lib/config/model:configmodel",
        "//eden/scm/lib/constructors:constructors",
        "//eden/scm/lib/dag:dag",
        "//eden/scm/lib/debugtop:debugtop",
        "//eden/scm/lib/doctor/network:network-doctor",
        "//eden/scm/lib/edenapi:edenapi",
        "//eden/scm/lib/edenfs-client:edenfs-client",
        "//eden/scm/lib/fsyncglob:fsyncglob",
        "//eden/scm/lib/hg-http:hg-http",
        "//eden/scm/lib/hg-metrics:hg-metrics",
        "//eden/scm/lib/hgtime:hgtime",
        "//eden/scm/lib/identity:identity",
        "//eden/scm/lib/indexedlog:indexedlog",
        "//eden/scm/lib/metrics/render:metrics-render",
        "//eden/scm/lib/mincode:mincode",
        "//eden/scm/lib/minibytes:minibytes",
        "//eden/scm/lib/procinfo:procinfo",
        "//eden/scm/lib/progress/model:progress-model",
        "//eden/scm/lib/progress/render:progress-render",
        "//eden/scm/lib/repo:repo",
        "//eden/scm/lib/revisionstore:revisionstore_with_ods",
        "//eden/scm/lib/runlog:runlog",
        "//eden/scm/lib/sampling:sampling",
        "//eden/scm/lib/tracing-collector:tracing-collector",
        "//eden/scm/lib/tracing-reload:tracing-reload",
        "//eden/scm/lib/tracing-sampler:tracing-sampler",
        "//eden/scm/lib/treestate:treestate",
        "//eden/scm/lib/types:types",
        "//eden/scm/lib/util:util",
        "//eden/scm/lib/util/atexit:atexit",
        "//eden/scm/lib/util/hgplain:hgplain",
        "//eden/scm/lib/util/nodeipc:nodeipc",
        "//eden/scm/lib/version:rust_version",
        "//eden/scm/lib/workingcopy:workingcopy",
        "//eden/scm/lib/workingcopy/repostate:repostate",
        "//eden/scm/saplingnative/bindings/modules/pytracing:pytracing",
        # see update_modules.sh
        # [[[cog
        # import cog, glob, os
        # for path in sorted(glob.glob('commands/cmd*/TARGETS')):
        #     name = os.path.basename(os.path.dirname(path))
        #     cog.outl(f'"//eden/scm/lib/commands/commands/{name}:{name}",')
        # ]]]
        "//eden/scm/lib/commands/commands/cmdclone:cmdclone",
        "//eden/scm/lib/commands/commands/cmdconfig:cmdconfig",
        "//eden/scm/lib/commands/commands/cmdconfigfile:cmdconfigfile",
        "//eden/scm/lib/commands/commands/cmdgoto:cmdgoto",
        "//eden/scm/lib/commands/commands/cmdroot:cmdroot",
        "//eden/scm/lib/commands/commands/cmdstatus:cmdstatus",
        "//eden/scm/lib/commands/commands/cmdversion:cmdversion",
        "//eden/scm/lib/commands/commands/cmdwhereami:cmdwhereami",
        # [[[end]]]
    ],
)
