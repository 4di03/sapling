"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["245"],{89096:function(e,t,n){n.r(t),n.d(t,{metadata:()=>s,contentTitle:()=>r,default:()=>a,assets:()=>o,toc:()=>l,frontMatter:()=>i});var s=JSON.parse('{"id":"commands/backout","title":"backout","description":"backout","source":"@site/docs/commands/backout.md","sourceDirName":"commands","slug":"/commands/backout","permalink":"/docs/commands/backout","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/backout.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"annotate","permalink":"/docs/commands/annotate"},"next":{"title":"bookmark","permalink":"/docs/commands/bookmark"}}'),d=n("85893"),c=n("50065");let i={sidebar_position:5},r=void 0,o={},l=[{value:"backout",id:"backout",level:2},{value:"arguments",id:"arguments",level:2}];function h(e){let t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h2,{id:"backout",children:"backout"}),"\n",(0,d.jsx)(t.p,{children:(0,d.jsx)(t.strong,{children:"reverse the effects of an earlier commit"})}),"\n",(0,d.jsx)(t.p,{children:"Create an inverse commit of the specified commit. Backout is commonly\nused to undo the effects of a public commit."}),"\n",(0,d.jsxs)(t.p,{children:["By default, ",(0,d.jsx)(t.code,{children:"sl backout"})," creates a new commit on top of the\ncurrent commit. Specify ",(0,d.jsx)(t.code,{children:"--no-commit"})," to skip making a new\ncommit, leaving the changes outstanding in your working copy."]}),"\n",(0,d.jsxs)(t.p,{children:["If merge conflicts are encountered during the backout, changes will be\nleft in the working copy with conflict markers inserted. When this occurs,\nresolve the conflicts and then run ",(0,d.jsx)(t.code,{children:"sl commit"}),"."]}),"\n",(0,d.jsxs)(t.p,{children:["By default, ",(0,d.jsx)(t.code,{children:"sl backout"})," will abort if pending changes are present in the\nworking copy. Specify ",(0,d.jsx)(t.code,{children:"--merge"})," to combine changes from the backout with\nyour pending changes."]}),"\n",(0,d.jsx)(t.p,{children:"Examples:"}),"\n",(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:"Reverse the effect of the parent of the working copy.  This backout will be committed immediately:"}),"\n"]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:"sl backout -r .\n"})}),"\n",(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsxs)(t.li,{children:["Reverse the effect of previous bad commit ",(0,d.jsx)(t.a,{href:"https://github.com/facebook/sapling/commit/42e8ddebe",children:(0,d.jsx)(t.code,{children:"42e8dde"})}),":"]}),"\n"]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:"sl backout -r 42e8ddebe\n"})}),"\n",(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsxs)(t.li,{children:["Reverse the effect of previous bad revision ",(0,d.jsx)(t.a,{href:"https://github.com/facebook/sapling/commit/42e8ddebe",children:(0,d.jsx)(t.code,{children:"42e8dde"})})," and  leave changes uncommitted:"]}),"\n"]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{children:'sl backout -r 42e8ddebe --no-commit\nsl commit -m "Backout 42e8ddebe"\n'})}),"\n",(0,d.jsxs)(t.p,{children:["By default, the new commit will have one parent,\nmaintaining a linear history. With ",(0,d.jsx)(t.code,{children:"--merge"}),", the commit\nwill instead have two parents: the old parent of the\nworking copy and a new child of REV that simply undoes REV."]}),"\n",(0,d.jsxs)(t.p,{children:["See ",(0,d.jsx)(t.code,{children:"sl help dates"})," for a list of formats valid for ",(0,d.jsx)(t.code,{children:"-d/--date"}),"."]}),"\n",(0,d.jsxs)(t.p,{children:["See ",(0,d.jsx)(t.code,{children:"sl help revert"})," for a way to restore files to the state\nof another revision."]}),"\n",(0,d.jsx)(t.p,{children:"Returns 0 on success, 1 if nothing to backout or there are unresolved\nfiles."}),"\n",(0,d.jsx)(t.h2,{id:"arguments",children:"arguments"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"shortname"}),(0,d.jsx)(t.th,{children:"fullname"}),(0,d.jsx)(t.th,{children:"default"}),(0,d.jsx)(t.th,{children:"description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--merge"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"combine existing pending changes with backout changes"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--no-commit"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false"})}),(0,d.jsx)(t.td,{children:"do not commit"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-r"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--rev"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"revision to back out"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-e"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--edit"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false"})}),(0,d.jsx)(t.td,{children:"open editor to specify custom commit message"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-t"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--tool"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"specify merge tool"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-I"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--include"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"include files matching the given patterns"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-X"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--exclude"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"exclude files matching the given patterns"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-m"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--message"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"use text as commit message"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-l"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--logfile"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"read commit message from file"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-d"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--date"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"record the specified date as commit date"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"-u"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"--user"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"record the specified user as committer"})]})]})]})]})}function a(e={}){let{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return r},a:function(){return i}});var s=n(67294);let d={},c=s.createContext(d);function i(e){let t=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);