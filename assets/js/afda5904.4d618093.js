"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["9860"],{85748:function(e,n,t){t.r(n),t.d(n,{metadata:()=>s,contentTitle:()=>r,default:()=>a,assets:()=>l,toc:()=>o,frontMatter:()=>i});var s=JSON.parse('{"id":"commands/next","title":"next","description":"next","source":"@site/docs/commands/next.md","sourceDirName":"commands","slug":"/commands/next","permalink":"/docs/commands/next","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/next.md","tags":[],"version":"current","sidebarPosition":25,"frontMatter":{"sidebar_position":25},"sidebar":"tutorialSidebar","previous":{"title":"metaedit","permalink":"/docs/commands/metaedit"},"next":{"title":"pr","permalink":"/docs/commands/pr"}}'),d=t("85893"),c=t("50065");let i={sidebar_position:25},r=void 0,l={},o=[{value:"next",id:"next",level:2},{value:"arguments",id:"arguments",level:2}];function h(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"next",children:"next"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"check out a descendant commit"})}),"\n",(0,d.jsxs)(n.p,{children:["Update to a descendant commit of the current commit. When working with a stack\nof commits, you can use ",(0,d.jsx)(n.code,{children:"sl next"})," to move up your stack with ease."]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["Use the ",(0,d.jsx)(n.code,{children:"--newest"})," flag to always pick the newest of multiple child commits.  You can set ",(0,d.jsx)(n.code,{children:"amend.alwaysnewest"})," to true in your global Sapling config file  to make this the default."]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["Use the ",(0,d.jsx)(n.code,{children:"--merge"})," flag to bring along uncommitted changes to the destination  commit."]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["Use the ",(0,d.jsx)(n.code,{children:"--bookmark"})," flag to move to the next commit with a bookmark."]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["Use the ",(0,d.jsx)(n.code,{children:"--rebase"})," flag to rebase any child commits that were left behind  after ",(0,d.jsx)(n.code,{children:"amend"}),", ",(0,d.jsx)(n.code,{children:"split"}),", ",(0,d.jsx)(n.code,{children:"fold"}),", or ",(0,d.jsx)(n.code,{children:"histedit"}),"."]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Examples:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Move 1 level up the stack:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl next\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Move 2 levels up the stack:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl next 2\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Move to the top of the stack:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sl next --top\n"})}),"\n",(0,d.jsx)(n.h2,{id:"arguments",children:"arguments"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"shortname"}),(0,d.jsx)(n.th,{children:"fullname"}),(0,d.jsx)(n.th,{children:"default"}),(0,d.jsx)(n.th,{children:"description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--newest"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"always pick the newest child when a commit has multiple children"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--rebase"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"rebase each commit if necessary"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--top"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"update to the head of the current stack"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--bookmark"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"update to the first commit with a bookmark"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--no-activate-bookmark"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"do not activate the bookmark on the destination commit"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--towards"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"move linearly towards the specified head"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-C"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--clean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"discard uncommitted changes (no backup)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-B"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--move-bookmark"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"move active bookmark"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-m"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--merge"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"merge uncommitted changes"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-c"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--check"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"require clean working directory"})]})]})]})]})}function a(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return i}});var s=t(67294);let d={},c=s.createContext(d);function i(e){let n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);