"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["3448"],{24033:function(e,n,s){s.r(n),s.d(n,{metadata:()=>o,contentTitle:()=>l,default:()=>h,assets:()=>a,toc:()=>d,frontMatter:()=>r});var o=JSON.parse('{"id":"overview/push-pull","title":"Pull / push","description":"Pull","source":"@site/docs/overview/push-pull.md","sourceDirName":"overview","slug":"/overview/push-pull","permalink":"/docs/overview/push-pull","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/overview/push-pull.md","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{"sidebar_position":80},"sidebar":"tutorialSidebar","previous":{"title":"Rebase","permalink":"/docs/overview/rebase"},"next":{"title":"Undo","permalink":"/docs/overview/undo"}}'),t=s("85893"),i=s("50065");let r={sidebar_position:80},l="Pull / push",a={},d=[{value:"Pull",id:"pull",level:3},{value:"Push",id:"push",level:3}];function c(e){let n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"pull--push",children:"Pull / push"})}),"\n",(0,t.jsx)(n.h3,{id:"pull",children:"Pull"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sl pull"})," command is used to download new commits from the server. By\ndefault it only pulls remote bookmarks that you are subscribed to. To subscribe\nto more bookmarks use ",(0,t.jsx)(n.code,{children:"sl pull -B other_bookmark_name"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"sl pull"})," only downloads commits. It does not rebase or merge anything, unless\nyou specify ",(0,t.jsx)(n.code,{children:"--rebase"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Note, this is different from ",(0,t.jsx)(n.code,{children:"git pull"})," which generally pulls all branches and\nautomatically tries to merge/rebase your changes with the new branches."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sl-shell-example",children:"$ sl\n  @  9f73762dd  62 minutes ago  mary\n  \u2502  Commit Two\n  \u2502\n  o  9d550d707  62 minutes ago  mary\n\u256D\u2500\u256F  Commit One\n\u2502\no  b5d600552  65 minutes ago  remote/main\n\u2577\n~\n\n# Fetch new commits from main\n$ sl pull\n\n# The current stack is now behind main\n$ sl\no  08a7511cc  33 seconds ago  remote/main\n\u2577\n\u2577 @  9f73762dd  63 minutes ago  mary\n\u2577 \u2502  Commit Two\n\u2577 \u2502\n\u2577 o  9d550d707  63 minutes ago  mary\n\u256D\u2500\u256F  Commit One\n\u2502\no  b5d600552  66 minutes ago\n\u2577\n~\n\n$ sl pull --rebase\n$ sl\n  @  e75394bbb  9 seconds ago  mary\n  \u2502  Commit Two\n  \u2502\n  o  4eefdfe1d  9 seconds ago  mary\n\u256D\u2500\u256F  Commit One\n\u2502\no  59125794a  20 seconds ago  remote/main\n\u2577\n~\n"})}),"\n",(0,t.jsx)(n.h3,{id:"push",children:"Push"}),"\n",(0,t.jsxs)(n.p,{children:["Use the push command to push local commits to remote. Specify the ",(0,t.jsx)(n.code,{children:"--to"})," to specify the remote branch/bookmark to push commits to. Specify ",(0,t.jsx)(n.code,{children:"-r"})," to specify local commit you want pushed. If ",(0,t.jsx)(n.code,{children:"-r"})," is omitted, the currently checked out commit is pushed."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sl-shell-example",children:"# Push current commit stack to the remote main bookmark.\n$ sl push -r . --to main\n"})}),"\n",(0,t.jsxs)(n.p,{children:["During a normal ",(0,t.jsx)(n.code,{children:"git push"})," or an ",(0,t.jsx)(n.code,{children:"sl push"})," to a Git repository, the push simply\nsends the commits to the server and moves the branch or bookmark forward to the\nnewly pushed commit."]}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.code,{children:"sl push"})," is used with the Sapling server, ",(0,t.jsx)(n.code,{children:"sl push --to BOOKMARK"})," pushes the\ncommits to the server and the server additionally rebases them onto the\ndestination bookmark.  This allows organizations with high push rates to avoid\nraces where someone is unable to push because someone else pushed first. This\nserver side rebase is simplified, in that it does not do any file content merging.\nIf someone else touched the same files you touched, your push will fail and you\nwill need to pull, rebase, and push again."]}),"\n",(0,t.jsx)(n.p,{children:"Notable push options (some of these may not work when working with Git repos):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-r"})," / ",(0,t.jsx)(n.code,{children:"--rev"})," Specifies which commit to push. Ancestors of this commit will\nalso be pushed. Note, only one head can be pushed at a time, so you can't push\n2+ branches at once."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--to"})," Specifies the remote bookmark to push onto."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--non-forward-move"})," Indicates that the push will result in the remote\nbookmark moving backwards or sideways, instead of moving forward to a\ndescendant. This is used when a bookmark is in the wrong location and needs to\nbe forced elsewhere."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--create"})," Used to indicate the bookmark being pushed to is new and should\nbe created."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-d"})," / ",(0,t.jsx)(n.code,{children:"--delete"})," Allows deleting a remote bookmark."]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},50065:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return r}});var o=s(67294);let t={},i=o.createContext(t);function r(e){let n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);