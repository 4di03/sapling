"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7528],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>o,MDXProvider:()=>s,mdx:()=>g,useMDXComponents:()=>u,withMDXComponents:()=>p});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l.apply(this,arguments)}function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){return function(t){var n=u(t.components);return a.createElement(e,l({},t,{components:n}))}},u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},x=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=u(n),s=r,x=p["".concat(d,".").concat(s)]||p[s]||c[s]||l;return n?a.createElement(x,m(m({ref:t},o),{},{components:n})):a.createElement(x,m({ref:t},o))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,d=new Array(l);d[0]=x;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m.mdxType="string"==typeof e?e:r,d[1]=m;for(var o=2;o<l;o++)d[o]=n[o];return a.createElement.apply(null,d)}return a.createElement.apply(null,n)}x.displayName="MDXCreateElement"},29978:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>m,toc:()=>o});var a=n(83117),r=(n(67294),n(3905));const l={sidebar_position:17},d=void 0,m={unversionedId:"commands/graft",id:"commands/graft",title:"graft",description:"graft",source:"@site/docs/commands/graft.md",sourceDirName:"commands",slug:"/commands/graft",permalink:"/docs/commands/graft",draft:!1,editUrl:"https://github.com/facebook/sapling/tree/main/website/docs/commands/graft.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"goto",permalink:"/docs/commands/goto"},next:{title:"help",permalink:"/docs/commands/help"}},i={},o=[{value:"graft",id:"graft",level:2},{value:"arguments",id:"arguments",level:2}],p={toc:o};function u(e){let{components:t,...n}=e;return(0,r.mdx)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h2",{id:"graft"},"graft"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"copy commits from a different location")),(0,r.mdx)("p",null,"Use Sapling's merge logic to copy individual commits from other\nlocations without making merge commits. This is sometimes known as\n'backporting' or 'cherry-picking'. By default, graft will also\ncopy user and description from the source commits. If you want to\nkeep the date of the source commits, you can add below config to your\nconfiguration file:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"[tweakdefaults]\ngraftkeepdate = True\n")),(0,r.mdx)("p",null,"Source commits will be skipped if they are ancestors of the\ncurrent commit, have already been grafted, or are merges."),(0,r.mdx)("p",null,"If ",(0,r.mdx)("inlineCode",{parentName:"p"},"--log")," is specified, commit messages will have a comment appended\nof the form:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"(grafted from COMMITHASH)\n")),(0,r.mdx)("p",null,"If ",(0,r.mdx)("inlineCode",{parentName:"p"},"--force")," is specified, commits will be grafted even if they\nare already ancestors of, or have been grafted to, the destination.\nThis is useful when the commits have since been backed out."),(0,r.mdx)("p",null,"If a graft results in conflicts, the graft process is interrupted\nso that the current merge can be manually resolved. Once all\nconflicts are resolved, the graft process can be continued with\nthe ",(0,r.mdx)("inlineCode",{parentName:"p"},"-c/--continue")," option."),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"-c/--continue")," operation does not remember options from\nthe original invocation, except for ",(0,r.mdx)("inlineCode",{parentName:"p"},"--force"),"."),(0,r.mdx)("p",null,"Examples:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"copy a single change to the stable branch and edit its description:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sl goto stable\nsl graft --edit ba7e89595\n")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"graft a range of changesets with one exception, updating dates:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},'sl graft -D "0e13e529c::224010e02 and not 85c0535a4"\n')),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"continue a graft after resolving conflicts:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sl graft -c\n")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"abort an interrupted graft:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sl graft --abort\n")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"show the source of a grafted changeset:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sl log --debug -r .\n")),(0,r.mdx)("p",null,"See ",(0,r.mdx)("inlineCode",{parentName:"p"},"sl help revisions")," for more about specifying revisions."),(0,r.mdx)("p",null,"Returns 0 on success."),(0,r.mdx)("h2",{id:"arguments"},"arguments"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"shortname"),(0,r.mdx)("th",{parentName:"tr",align:null},"fullname"),(0,r.mdx)("th",{parentName:"tr",align:null},"default"),(0,r.mdx)("th",{parentName:"tr",align:null},"description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-r")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--rev")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"revisions to graft")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-c")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--continue")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"resume interrupted graft")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--abort")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"abort an interrupted graft")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-e")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--edit")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"invoke editor on commit messages")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--log")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"append graft info to log message")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-f")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--force")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"force graft")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-D")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--currentdate")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"record the current date as commit date")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-U")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--currentuser")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"false")),(0,r.mdx)("td",{parentName:"tr",align:null},"record the current user as committer")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-d")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--date")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"record the specified date as commit date")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-u")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--user")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"record the specified user as committer")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-t")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--tool")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"specify merge tool")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"-n")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"--dry-run")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"do not perform actions, just print output")))))}u.isMDXComponent=!0}}]);